   1:				TITLE	"INITDIR - Initialize disk directory for P2DOS Stamps"
   2:			;===========================================================================;
   3:			; I N I T D I R								    ;
   4:			;---------------------------------------------------------------------------;
   5:			; Copyright (C) 1988  by Harold F. Bower				    ;
   6:			;---------------------------------------------------------------------------;
   7:			; Derived from 2 Oct 86 Disassembly of INITDIR.COM provided with P2DOS	    ;
   8:			;									    ;
   9:			; Revision:								    ;
  10:			;  1.2 - 11 Apr 93 - Modified Header for ZCNFG24 configurability.	HFB ;
  11:			;  1.1 -  7 Mar 89 - Added "Quiet" mode with ZCNFG configurability.	HFB ;
  12:			;  1.0 - 16 Sep 88 - Release Version					HFB ;
  13:			;===========================================================================;
  14:			
  15:				include darkstar.equ
**** darkstar.equ ****
   1:			;****** Equ's file autogenerated by genequs ver: 1.0
   2:			;****** Input files:
   3:			;****** SysCommon.lst
   4:	FDC4'         	FIN            	EQU	0FDC4H
   5:	FD89'         	DLY1           	EQU	0FD89H
   6:	FD87'         	DLY2           	EQU	0FD87H
   7:	FDE1'         	FOUT           	EQU	0FDE1H
   8:	FE70'         	U1NUL          	EQU	0FE70H
   9:	FE25'         	U0ISR          	EQU	0FE25H
  10:	FE59'         	U1ISR          	EQU	0FE59H
  11:	FD85'         	DELAY          	EQU	0FD85H
  12:	FE4E'         	UISRE          	EQU	0FE4EH
  13:	FDB5'         	FSTAT          	EQU	0FDB5H
  14:	FE32'         	UISRI          	EQU	0FE32H
  15:	FC4B'         	BBU1ST         	EQU	0FC4BH
  16:	FC45'         	BBU1RX         	EQU	0FC45H
  17:	FC3F'         	BBU1TX         	EQU	0FC3FH
  18:	FD29'         	BBEXEC         	EQU	0FD29H
  19:	FCFF'         	BBHDRD         	EQU	0FCFFH
  20:	FD6A'         	BBVOID         	EQU	0FD6AH
  21:	FE86'         	UASTKB         	EQU	0FE86H
  22:	FD6B'         	MMPMAP         	EQU	0FD6BH
  23:	FE0F'         	INTRDI         	EQU	0FE0FH
  24:	FC2D'         	SCONIN         	EQU	0FC2DH
  25:	FC15'         	VCONIN         	EQU	0FC15H
  26:	FCDB'         	BBDIV16        	EQU	0FCDBH
  27:	FCF9'         	BBHDWR         	EQU	0FCF9H
  28:	FD78'         	MMGETP         	EQU	0FD78H
  29:	FDFE'         	INTREN         	EQU	0FDFEH
  30:	FE79'         	RLDROM         	EQU	0FE79H
  31:	FCE1'         	BBMUL16        	EQU	0FCE1H
  32:	FC00'         	SYSCOM         	EQU	0FC00H
  33:	FE84'         	UASTAV         	EQU	0FE84H
  34:	FE19'         	SYTIMR         	EQU	0FE19H
  35:	FC33'         	SCONST         	EQU	0FC33H
  36:	FC1B'         	VCONST         	EQU	0FC1BH
  37:	FC39'         	BBU0INI        	EQU	0FC39H
  38:	FC51'         	BBU1INI        	EQU	0FC51H
  39:	FC87'         	BBFREAD        	EQU	0FC87H
  40:	FD23'         	BBEIDCK        	EQU	0FD23H
  41:	FD05'         	BBHDGEO        	EQU	0FD05H
  42:	FEB4'         	BBSTACK        	EQU	0FEB4H
  43:	FC81'         	BBFHOME        	EQU	0FC81H
  44:	FD94'         	BBCONIN        	EQU	0FD94H
  45:	FC27'         	CRDUREG        	EQU	0FC27H
  46:	FFF0'         	SINTVEC        	EQU	0FFF0H
  47:	FEB4'         	SYSCMLO        	EQU	0FEB4H
  48:	FE22'         	VOIDISR        	EQU	0FE22H
  49:	FC9F'         	BBSTTIM        	EQU	0FC9FH
  50:	FDAA'         	BBCONST        	EQU	0FDAAH
  51:	FC27'         	SCONOUT        	EQU	0FC27H
  52:	FC0F'         	VCONOUT        	EQU	0FC0FH
  53:	FCE7'         	BBOFFCAL       	EQU	0FCE7H
  54:	FC57'         	BBINICTC       	EQU	0FC57H
  55:	FE90'         	BBSTBASE       	EQU	0FE90H
  56:	FC5D'         	BBRESCTC       	EQU	0FC5DH
  57:	FCA5'         	BBRDTIME       	EQU	0FCA5H
  58:	FD5A'         	BBCALRET       	EQU	0FD5AH
  59:	FCB7'         	BBDMASET       	EQU	0FCB7H
  60:	FC00'         	BBJTOBNK       	EQU	0FC00H
  61:	FCBD'         	BBDSKSEL       	EQU	0FCBDH
  62:	FCED'         	BBHDINIT       	EQU	0FCEDH
  63:	FCB1'         	BBSECSET       	EQU	0FCB1H
  64:	FD0B'         	BBHDBOOT       	EQU	0FD0BH
  65:	FC69'         	BBUPLCHR       	EQU	0FC69H
  66:	FC99'         	BBPRNCHR       	EQU	0FC99H
  67:	FCC9'         	BBVCPMBT       	EQU	0FCC9H
  68:	FC93'         	BBFLOPIO       	EQU	0FC93H
  69:	FD1D'         	BBEPMNGR       	EQU	0FD1DH
  70:	FCCF'         	BBSIDSET       	EQU	0FCCFH
  71:	FD11'         	BBLDPART       	EQU	0FD11H
  72:	FC75'         	BBRDVDSK       	EQU	0FC75H
  73:	FC8D'         	BBFWRITE       	EQU	0FC8DH
  74:	FCC3'         	BBCPBOOT       	EQU	0FCC3H
  75:	FC21'         	BBCURSET       	EQU	0FC21H
  76:	FCAB'         	BBTRKSET       	EQU	0FCABH
  77:	FC7B'         	BBWRVDSK       	EQU	0FC7BH
  78:	FD9F'         	BBCONOUT       	EQU	0FD9FH
  79:	FCF3'         	BBDRIVEID      	EQU	0FCF3H
  80:	FC63'         	BBPSNDBLK      	EQU	0FC63H
  81:	FC03'         	BBCRTCINI      	EQU	0FC03H
  82:	FC6F'         	BBPRCVBLK      	EQU	0FC6FH
  83:	FC09'         	BBCRTFILL      	EQU	0FC09H
  84:	FCD5'         	BBFDRVSEL      	EQU	0FCD5H
  85:	FD17'         	BBDPRMSET      	EQU	0FD17H
  86:			;****** EOF ***
  87:			
**** initdir.asm ****
  16:			
  17:	000C'         	VERS	EQU	12		; Current version
  18:			DATE	  MACRO
  19:				DEFB	'  12 Apr 93'
  20:				  ENDM
  21:			
  22:	0000'         	BASE	EQU	0000H		; Base address of CP/M system
  23:	0005'         	BDOS	EQU	0005H		; Bdos Call entry point
  24:	005C'         	FCB	EQU	005CH		; Default CP/M File Control Block
  25:	0080'         	BUFF	EQU	0080H		; Default CP/M buffer location
  26:			
  27:	0080'         	SECSIZ	EQU	128		; Logical sector size
  28:	0020'         	IDLEN	EQU	32		; Length of Directory entry
  29:			
  30:	0007'         	BELL	EQU	07H
  31:	0008'         	BS	EQU	08H
  32:	0009'         	TAB	EQU	09H
  33:	000A'         	LF	EQU	0AH
  34:	000D'         	CR	EQU	0DH
  35:			
  36:				.Z80
  37:				CSEG
  38:			
  39:	0000' C31700  	ENTER:	JP	START		; Jump to execution
  40:			
  41:	0003' 5A33454E		DEFB	'Z3ENV'		; Dummy header, not used
	      56
  42:	0008' 01      		DEFB	1
  43:	0009' 0100    	Z3EADR:	DEFW	0001H
  44:	000B' 0000    		DEFW	ENTER		; ..filler to Name field
  45:			
  46:	000D' 494E4954		DEFB	'INITDIR ',0	; Program name for ZCNFG
	      44495220
	      00
  47:							; Configuration file is INITDIR.CFG
  48:			
  49:	0016' FF      	QUIET:	DEFB	0FFH		; 0=Verbose, FF=Quiet
  50:			
  51:	0017' ED731608	START:	LD	(STACK),SP	; Save SP and set new stack
  52:	001B' 311608  		LD	SP,STACK
  53:	001E' 111804  		LD	DE,PROMPT	; Print opening banner
  54:	0021' CD5303  		CALL	WRTLIN
  55:	0024' 0E19    		LD	C,25		; Get current logged drive
  56:	0026' CD0500  		CALL	BDOS
  57:	0029' 329C07  		LD	(DEFDRV),A	; Save entry drive
  58:	002C' 218000  		LD	HL,BUFF		; See if anything was entered
  59:	002F' 46      		LD	B,(HL)		; Get char count to B
  60:	0030' 04      		INC	B		; ..Precompensate for following dec
  61:	0031' 05      	LOOP1:	DEC	B		; Are we out of chars in input?
  62:	0032' 283A    		JR	Z,INTACT	; ..jump to interactive if so
  63:	0034' 23      		INC	HL		; Advance to first char in args
  64:	0035' 7E      		LD	A,(HL)
  65:	0036' FE2F    		CP	'/'		; Do we have Help request?
  66:	0038' CA6F02  		JP	Z,HELP		; ..jump if so
  67:	003B' FE20    		CP	' '		; Is it a Space?
  68:	003D' 28F2    		JR	Z,LOOP1		; ..jump to check next char if so
  69:	003F' FE09    		CP	TAB		; Is it a Tab char?
  70:	0041' 28EE    		JR	Z,LOOP1		; ..jump to check next char if so
  71:			
  72:	0043' 329B07  		LD	(EXPERT),A	; We have a character, save as flag
  73:	0046' FE41    		CP	'A'		; Check for legal drive
  74:	0048' 3804    		JR	C,NGVCT		; ..Go error if Bad drive
  75:	004A' FE51    		CP	'P'+1
  76:	004C' 3846    		JR	C,OKDRV		; We have a valid drive letter, proceed
  77:	004E'         	NGVCT:
  78:	004E' C36302  		JP	NOGOOD		; ..else go to bad drive error exit
  79:			
  80:	0051' 311608  	INTACL:	LD	SP,STACK	; Reset the stack for next pass
  81:	0054' 115105  		LD	DE,MESG1	; See if another drive is desired
  82:	0057' CD5303  		CALL	WRTLIN
  83:	005A' 110E05  		LD	DE,DPROM1	; Print the Y/N part of prompt
  84:	005D' CD5303  		CALL	WRTLIN
  85:	0060' CD6C03  		CALL	GETCH		; Get user response
  86:	0063' FE59    		CP	'Y'		; Is it a "Y"?
  87:	0065' C24B03  		JP	NZ,EXIT0	; ..jump to exit if Not
  88:						;..else fall thru to do again..
  89:	0068' CD2903  		CALL	RSELEC		; Begin by resynchronizing drives
  90:	006B' CD5003  		CALL	CRLF		; ..and clearing some space
  91:			
  92:	006E' AF      	INTACT:	XOR	A		; Show that we are in Interactive mode
  93:	006F' 329B07  		LD	(EXPERT),A	; ..by clearing flag
  94:	0072' 219D07  		LD	HL,DRVNUM	; Clear variables for next pass
  95:	0075' 0679    		LD	B,STACK-DRVNUM	; ..for this many bytes
  96:	0077' 77      	CLRL:	LD	(HL),A
  97:	0078' 23      		INC	HL
  98:	0079' 10FC    		DJNZ	CLRL		; ..loop thru til done
  99:	007B' 111905  	GETDRV:	LD	DE,MESG0	; Ask user for drive letter
 100:	007E' CD5303  		CALL	WRTLIN
 101:	0081' CD6C03  		CALL	GETCH		; ..and get letter in Uppercase
 102:	0084' FE41    		CP	'A'		; Check for legal drive letter
 103:	0086' 3804    		JR	C,NODRV		; ..jump if < A
 104:	0088' FE51    		CP	'P'+1
 105:	008A' 3808    		JR	C,OKDRV		; ..jump if Not > P
 106:	008C' 116E05  	NODRV:	LD	DE,MESG2	; Else Beep and erase the entry
 107:	008F' CD5303  		CALL	WRTLIN
 108:	0092' 18E7    		JR	GETDRV		; ..and loop til valid
 109:			
 110:	0094' 329D07  	OKDRV:	LD	(DRVNUM),A	; Save drive letter
 111:	0097' 3A1600  		LD	A,(QUIET)	; Proceed w/o Confirmation prompt?
 112:	009A' B7      		OR	A
 113:	009B' 2015    		JR	NZ,OKDRV0	; ..jump if so
 114:	009D' 11EA04  		LD	DE,DPROMP	; Ask user to confirm drive
 115:	00A0' CD5303  		CALL	WRTLIN
 116:	00A3' 3A9D07  		LD	A,(DRVNUM)	; ..followed by the drive
 117:	00A6' 5F      		LD	E,A
 118:	00A7' 0E02    		LD	C,2
 119:	00A9' CD0500  		CALL	BDOS
 120:	00AC' 110B05  		LD	DE,DPROM0	; Then print the end of the prompt
 121:	00AF' CD5803  		CALL	GETACT		; ..and get user response
 122:			
 123:	00B2' 3A9D07  	OKDRV0:	LD	A,(DRVNUM)	; Get the drive letter
 124:	00B5' D641    		SUB	'A'		; ..and make binary
 125:	00B7' F5      		PUSH	AF		; Save drive for later
 126:	00B8' 5F      		LD	E,A
 127:	00B9' CD3703  		CALL	LOGDOS		; Log onto the requested drive
 128:	00BC' 1E00    		LD	E,0
 129:	00BE' 0E20    		LD	C,32		; Log into User 0
 130:	00C0' CD0500  		CALL	BDOS
 131:	00C3' 217707  		LD	HL,TDFCB	; Initialize the FCB in case re-executing
 132:	00C6' AF      		XOR	A		; Use Null value
 133:	00C7' 77      		LD	(HL),A		; Set to current drive
 134:	00C8' 110C00  		LD	DE,12		; Offset to EX
 135:	00CB' 19      		ADD	HL,DE
 136:	00CC' 0618    		LD	B,24		; Need 24 nulls here
 137:	00CE' 77      	INITL:	LD	(HL),A
 138:	00CF' 23      		INC	HL
 139:	00D0' 10FC    		DJNZ	INITL		; ..loop til all done
 140:	00D2' 117707  		LD	DE,TDFCB
 141:	00D5' 0E11    		LD	C,17		; Is there a !!!TIME&.DAT file?
 142:	00D7' CD0500  		CALL	BDOS
 143:	00DA' 3C      		INC	A		; Was it found?
 144:	00DB' 11D006  		LD	DE,EXMSG	; We found a time file, prompt for activity
 145:	00DE' C45803  		CALL	NZ,GETACT	; ..go here if found and abort if not "Y"
 146:			
 147:	00E1' F1      		POP	AF		; Get the drive back, and continue
 148:	00E2' 4F      		LD	C,A
 149:	00E3' CD8703  		CALL	BSELDK		; Select the drive
 150:	00E6' 7C      		LD	A,H		; DPH address returned in HL
 151:	00E7' B5      		OR	L
 152:	00E8' CA6302  		JP	Z,NOGOOD	; ..exit if can't log on
 153:	00EB' 5E      		LD	E,(HL)		; Get skew table address in DE
 154:	00EC' 23      		INC	HL
 155:	00ED' 56      		LD	D,(HL)
 156:	00EE' ED53A407		LD	(SKWTBL),DE	; ..and save
 157:	00F2' 110900  		LD	DE,9
 158:	00F5' 19      		ADD	HL,DE		; Offset to DPB address
 159:	00F6' 5E      		LD	E,(HL)		; ..and get it
 160:	00F7' 23      		INC	HL
 161:	00F8' 56      		LD	D,(HL)
 162:	00F9' D5      		PUSH	DE
 163:	00FA' DDE1    		POP	IX		; IX now points to DPB
 164:	00FC' 211808  		LD	HL,RAMBUF
 165:	00FF' DD5608  		LD	D,(IX+08H)	; DIRMAX-1 to DE
 166:	0102' DD5E07  		LD	E,(IX+07H)
 167:	0105' 13      		INC	DE		; make = DIRMAX
 168:	0106' ED539E07		LD	(DIRMAX),DE	; ..and save
 169:	010A' CB3A    		SRL	D		; Find # logical sctrs in directory
 170:	010C' CB1B    		RR	E
 171:	010E' CB3A    		SRL	D
 172:	0110' CB1B    		RR	E
 173:	0112' ED53A007		LD	(NDIRSC),DE	; ..and save
 174:	0116' 010000  		LD	BC,0
 175:			
 176:			; Enter: BC = Logical sector number
 177:			;	 DE = Number of directory sectors
 178:			;	 HL = Buffer address
 179:			
 180:	0119' 3A1600  		LD	A,(QUIET)	; Do it quietly?
 181:	011C' B7      		OR	A
 182:	011D' 200C    		JR	NZ,LODDIR	; ..jump if so
 183:	011F' E5      		PUSH	HL		; Save the registers
 184:	0120' D5      		PUSH	DE
 185:	0121' C5      		PUSH	BC
 186:	0122' 111107  		LD	DE,TMSG1	; Tell the user we are Reading
 187:	0125' CD5303  		CALL	WRTLIN
 188:	0128' C1      		POP	BC
 189:	0129' D1      		POP	DE
 190:	012A' E1      		POP	HL
 191:			
 192:	012B' CD7602  	LODDIR:	CALL	RDBLOK		; Read a block of data
 193:	012E' D5      		PUSH	DE
 194:	012F' 118000  		LD	DE,SECSIZ
 195:	0132' 19      		ADD	HL,DE		; Increment DMA address
 196:	0133' D1      		POP	DE
 197:	0134' 03      		INC	BC		; Increment logical sector #
 198:	0135' EB      		EX	DE,HL
 199:	0136' B7      		OR	A
 200:	0137' ED42    		SBC	HL,BC		; See if we have read all
 201:	0139' 09      		ADD	HL,BC
 202:	013A' EB      		EX	DE,HL
 203:	013B' 20EE    		JR	NZ,LODDIR	; ..loop until all directory read
 204:	013D' 3A7808  		LD	A,(RAMBUF+96)
 205:	0140' FE21    		CP	'!'		; Check for Time/Date marker
 206:	0142' 2006    		JR	NZ,INITIL	; ..jump if not set
 207:	0144' 11D103  		LD	DE,ALREDY
 208:	0147' C33C03  		JP	ABORT		; ..else exit with error message
 209:			
 210:	014A' 211808  	INITIL:	LD	HL,RAMBUF	; Count valid filenames in directory
 211:	014D' ED5B9E07		LD	DE,(DIRMAX)
 212:	0151' 010000  		LD	BC,0		; Start with count = 0
 213:	0154' 7E      	CNTLOP:	LD	A,(HL)
 214:	0155' FEE5    		CP	0E5H		; If not deleted file..
 215:	0157' 2805    		JR	Z,NOCNT
 216:	0159' FE21    		CP	'!'		; ..or time/date file..
 217:	015B' 2801    		JR	Z,NOCNT
 218:	015D' 03      		INC	BC		; ..bump count
 219:	015E' 7D      	NOCNT:	LD	A,L
 220:	015F' C620    		ADD	A,IDLEN		; Increment to next entry
 221:	0161' 6F      		LD	L,A
 222:	0162' 3001    		JR	NC,LL0
 223:	0164' 24      		INC	H
 224:	0165' 1B      	LL0:	DEC	DE		; Decrement file count
 225:	0166' 7A      		LD	A,D
 226:	0167' B3      		OR	E
 227:	0168' 20EA    		JR	NZ,CNTLOP	; Loop if more to go
 228:			
 229:			; Entries * 4/3 = required space.  Check for adequate space
 230:			
 231:	016A' CB21    		SLA	C		; # Files * 4
 232:	016C' CB10    		RL	B
 233:	016E' CB21    		SLA	C
 234:	0170' CB10    		RL	B
 235:	0172' 110000  		LD	DE,0
 236:	0175' 0B      	LL1:	DEC	BC		; Divide by 3
 237:	0176' 0B      		DEC	BC
 238:	0177' 0B      		DEC	BC
 239:	0178' 13      		INC	DE		; (count in DE)
 240:	0179' CB78    		BIT	7,B		; ..quit when < 0
 241:	017B' 28F8    		JR	Z,LL1
 242:	017D' 2A9E07  		LD	HL,(DIRMAX)
 243:	0180' EB      		EX	DE,HL
 244:	0181' B7      		OR	A
 245:	0182' ED52    		SBC	HL,DE		; Check DIRMAX > required
 246:	0184' 11F203  		LD	DE,NOSPAC
 247:	0187' D23C03  		JP	NC,ABORT	; ..jump if Not Ok
 248:			
 249:			; Initialize Date/Time buffer with date in format:
 250:			;	0       8      10      18      20H
 251:			;	|       |       |       |       |
 252:			;	!nnHMnnHM00nnHMnnHM00nnHMnnHM000
 253:			
 254:	018A' 21A607  		LD	HL,DBUFFR	; Set initial Date/Time field
 255:	018D' 3621    		LD	(HL),'!'	; Date/Time flag
 256:	018F' 23      		INC	HL
 257:	0190' 0603    		LD	B,3		; Repeat 3 times
 258:	0192' C5      	LL2:	PUSH	BC
 259:	0193' EB      		EX	DE,HL
 260:	0194' 217207  		LD	HL,DATTIM
 261:	0197' 010400  		LD	BC,4		; Move Create date
 262:	019A' EDB0    		LDIR
 263:	019C' 217207  		LD	HL,DATTIM
 264:	019F' 010400  		LD	BC,4		; ..and modified date
 265:	01A2' EDB0    		LDIR
 266:	01A4' EB      		EX	DE,HL
 267:	01A5' 3600    		LD	(HL),0		; ..followed by 2 nulls
 268:	01A7' 23      		INC	HL
 269:	01A8' 3600    		LD	(HL),0
 270:	01AA' 23      		INC	HL
 271:	01AB' C1      		POP	BC
 272:	01AC' 10E4    		DJNZ	LL2
 273:	01AE' 3600    		LD	(HL),0		; End with final null
 274:			
 275:			; Move valid directory entries to default buffer and write
 276:			; them to disk 3 at a time with time & date added.
 277:			
 278:	01B0' 3A1600  		LD	A,(QUIET)	; Do it quietly?
 279:	01B3' B7      		OR	A
 280:	01B4' 2006    		JR	NZ,WRT0		; ..jump if so
 281:			
 282:	01B6' 113307  		LD	DE,TMSG2	; Tell the User we are writing
 283:	01B9' CD5303  		CALL	WRTLIN
 284:			
 285:	01BC' 211808  	WRT0:	LD	HL,RAMBUF
 286:	01BF' 110000  		LD	DE,0
 287:	01C2' ED53A207		LD	(SCWRTN),DE
 288:	01C6' ED5B9E07		LD	DE,(DIRMAX)
 289:	01CA' 0E03    		LD	C,3
 290:	01CC' 7E      	WRTNAM:	LD	A,(HL)
 291:	01CD' FEE5    		CP	0E5H
 292:	01CF' 282B    		JR	Z,NOCNT1
 293:	01D1' FE21    		CP	'!'
 294:	01D3' 2827    		JR	Z,NOCNT1
 295:	01D5' D5      		PUSH	DE
 296:	01D6' 79      		LD	A,C		; Start with count/index
 297:	01D7' 87      		ADD	A,A		; ..shifted * 32
 298:	01D8' 87      		ADD	A,A
 299:	01D9' 87      		ADD	A,A
 300:	01DA' 87      		ADD	A,A
 301:	01DB' 87      		ADD	A,A
 302:	01DC' ED44    		NEG			; Invert order
 303:	01DE' C6E0    		ADD	A,0E0H		; ..compensate
 304:	01E0' 5F      		LD	E,A
 305:	01E1' 1600    		LD	D,0		; Now have addr in default buffer
 306:	01E3' CD7E03  		CALL	MOVE32
 307:	01E6' 0D      		DEC	C
 308:	01E7' 2010    		JR	NZ,WRTNA0	; Loop if more
 309:	01E9' 11E000  		LD	DE,BUFF+96	; When 3 moved..
 310:	01EC' E5      		PUSH	HL
 311:	01ED' 21A607  		LD	HL,DBUFFR	; ..put date & time in last slot
 312:	01F0' CD7E03  		CALL	MOVE32
 313:	01F3' CDC702  		CALL	WRBLOK		; ..and write the sector
 314:	01F6' 0E03    		LD	C,3		; Set up for 3 more
 315:	01F8' E1      		POP	HL		; ..restoring regs..
 316:	01F9' D1      	WRTNA0:	POP	DE
 317:	01FA' 1806    		JR	WRTNA1		; ..and re-enter loop
 318:			
 319:	01FC' D5      	NOCNT1:	PUSH	DE
 320:	01FD' 112000  		LD	DE,IDLEN
 321:	0200' 19      		ADD	HL,DE		; Increment by 32 for next entry
 322:	0201' D1      		POP	DE
 323:	0202' 1B      	WRTNA1:	DEC	DE		; Count down number of entries
 324:	0203' 7A      		LD	A,D
 325:	0204' B3      		OR	E
 326:	0205' 20C5    		JR	NZ,WRTNAM	; Loop til done with whole dir
 327:	0207' 79      		LD	A,C		; See if final sector written
 328:	0208' FE03    		CP	3
 329:	020A' 2829    		JR	Z,L0316		; Jump if just finished write
 330:	020C' 11E000  		LD	DE,BUFF+96
 331:	020F' E5      		PUSH	HL
 332:	0210' 21A607  		LD	HL,DBUFFR	; ..else move time & date
 333:	0213' CD7E03  		CALL	MOVE32
 334:	0216' E1      		POP	HL
 335:	0217' 79      		LD	A,C		; Calculate next entry position
 336:	0218' 87      		ADD	A,A
 337:	0219' 87      		ADD	A,A
 338:	021A' 87      		ADD	A,A
 339:	021B' 87      		ADD	A,A
 340:	021C' 87      		ADD	A,A
 341:	021D' ED44    		NEG
 342:	021F' C6E0    		ADD	A,0E0H
 343:	0221' 6F      		LD	L,A
 344:	0222' 2600    		LD	H,0
 345:	0224' 11E000  		LD	DE,BUFF+96	; ..set ending position
 346:	0227' B7      	LL3:	OR	A
 347:	0228' ED52    		SBC	HL,DE
 348:	022A' 19      		ADD	HL,DE
 349:	022B' 2805    		JR	Z,L0313
 350:	022D' 36E5    		LD	(HL),0E5H	; ..and fill unused w/delete marks
 351:	022F' 23      		INC	HL
 352:	0230' 18F5    		JR	LL3
 353:			
 354:	0232' CDC702  	L0313:	CALL	WRBLOK		; Write partial directory sector
 355:	0235' 2AA207  	L0316:	LD	HL,(SCWRTN)
 356:	0238' ED5BA007		LD	DE,(NDIRSC)
 357:	023C' B7      		OR	A
 358:	023D' ED52    		SBC	HL,DE
 359:	023F' 19      		ADD	HL,DE
 360:			;1.2	JP	Z,EXIT		; ..quit when done
 361:	0240' 2818    		JR	Z,WRLAST	;1.2 ..jump to clear buffer and exit when done
 362:	0242' 218000  		LD	HL,BUFF
 363:	0245' 0660    		LD	B,96
 364:	0247' 36E5    	L0328:	LD	(HL),0E5H
 365:	0249' 23      		INC	HL
 366:	024A' 10FB    		DJNZ	L0328
 367:	024C' EB      		EX	DE,HL
 368:	024D' 21A607  		LD	HL,DBUFFR
 369:	0250' 012000  		LD	BC,IDLEN
 370:	0253' EDB0    		LDIR			; Move 32 bytes
 371:	0255' CDC702  		CALL	WRBLOK
 372:	0258' 18DB    		JR	L0316
 373:			
 374:	025A' 010100  	WRLAST:	LD	BC,0001		;1.2 Force Directory write of current Sector
 375:	025D' CDA503  		CALL	BWRIT		;1.2 .write it!
 376:	0260' C34403  		JP	EXIT		;1.2 ..and Quit
 377:			
 378:	0263' 11BA03  	NOGOOD:	LD	DE,BADDRV
 379:	0266' CD5303  		CALL	WRTLIN		; Print Bad drive error
 380:	0269' 11A405  	HELP0:	LD	DE,HLPMSG
 381:	026C' C33C03  		JP	ABORT		; Print Help message, relog drive and quit
 382:			
 383:	026F' F6FF    	HELP:	OR	0FFH		; If help request, show we're not interactive
 384:	0271' 329B07  		LD	(EXPERT),A
 385:	0274' 18F3    		JR	HELP0		; ..and jump back to common code
 386:			
 387:	0276' C5      	RDBLOK:	PUSH	BC
 388:	0277' D5      		PUSH	DE
 389:	0278' E5      		PUSH	HL
 390:	0279' 210000  		LD	HL,0
 391:	027C' DD5601  		LD	D,(IX+01H)	; Get Sectors/Track
 392:	027F' DD5E00  		LD	E,(IX+00H)
 393:	0282' 3E11    		LD	A,16+1
 394:	0284' B7      	L044A:	OR	A
 395:	0285' ED52    		SBC	HL,DE
 396:	0287' 3F      		CCF
 397:	0288' 3802    		JR	C,L0452
 398:	028A' 19      		ADD	HL,DE
 399:	028B' B7      		OR	A
 400:	028C' CB11    	L0452:	RL	C		; Shift carry bits in to BC
 401:	028E' CB10    		RL	B
 402:	0290' 3D      		DEC	A
 403:	0291' 2806    		JR	Z,L045F		; ..exit when thru
 404:	0293' CB15    		RL	L		; Shift HL left
 405:	0295' CB14    		RL	H
 406:	0297' 18EB    		JR	L044A
 407:			
 408:	0299' E5      	L045F:	PUSH	HL
 409:	029A' DD660E  		LD	H,(IX+0EH)	; Get track offset
 410:	029D' DD6E0D  		LD	L,(IX+0DH)
 411:	02A0' 09      		ADD	HL,BC
 412:	02A1' 44      		LD	B,H		; Move current track to BC
 413:	02A2' 4D      		LD	C,L
 414:	02A3' CD8D03  		CALL	BSTTRK		; ..and set controller
 415:	02A6' C1      		POP	BC		; Restore logical sector
 416:	02A7' ED5BA407		LD	DE,(SKWTBL)
 417:	02AB' CDAB03  		CALL	BSKEW		; ..and get physical sector
 418:	02AE' 44      		LD	B,H
 419:	02AF' 4D      		LD	C,L
 420:	02B0' CD9303  		CALL	BSTSEC		; Set the sector
 421:	02B3' C1      		POP	BC
 422:	02B4' C5      		PUSH	BC
 423:	02B5' CD9903  		CALL	BSTDMA		; Set transfer address
 424:	02B8' CD9F03  		CALL	BREAD		; ..and read a sector
 425:	02BB' B7      		OR	A
 426:	02BC' 2004    		JR	NZ,LODBAD	; Jump error if Error
 427:	02BE' E1      		POP	HL
 428:	02BF' D1      		POP	DE
 429:	02C0' C1      		POP	BC
 430:	02C1' C9      		RET
 431:			
 432:	02C2' 117305  	LODBAD:	LD	DE,RDERR
 433:	02C5' 1875    		JR	ABORT
 434:			
 435:	02C7' C5      	WRBLOK:	PUSH	BC
 436:	02C8' D5      		PUSH	DE
 437:	02C9' E5      		PUSH	HL
 438:	02CA' 210000  		LD	HL,0
 439:	02CD' ED4BA207		LD	BC,(SCWRTN)
 440:	02D1' DD5601  		LD	D,(IX+01H)	; Get Sectors/Track to DE
 441:	02D4' DD5E00  		LD	E,(IX+00H)
 442:	02D7' 3E11    		LD	A,17
 443:	02D9' B7      	L04BF:	OR	A
 444:	02DA' ED52    		SBC	HL,DE
 445:	02DC' 3F      		CCF
 446:	02DD' 3802    		JR	C,L04C7
 447:	02DF' 19      		ADD	HL,DE
 448:	02E0' B7      		OR	A
 449:	02E1' CB11    	L04C7:	RL	C
 450:	02E3' CB10    		RL	B
 451:	02E5' 3D      		DEC	A
 452:	02E6' 2806    		JR	Z,L04D4
 453:	02E8' CB15    		RL	L
 454:	02EA' CB14    		RL	H
 455:	02EC' 18EB    		JR	L04BF
 456:			
 457:	02EE' E5      	L04D4:	PUSH	HL
 458:	02EF' DD660E  		LD	H,(IX+0EH)	; Get track offset
 459:	02F2' DD6E0D  		LD	L,(IX+0DH)
 460:	02F5' 09      		ADD	HL,BC
 461:	02F6' 44      		LD	B,H
 462:	02F7' 4D      		LD	C,L
 463:	02F8' CD8D03  		CALL	BSTTRK
 464:	02FB' C1      		POP	BC
 465:	02FC' ED5BA407		LD	DE,(SKWTBL)
 466:	0300' CDAB03  		CALL	BSKEW
 467:	0303' 44      		LD	B,H
 468:	0304' 4D      		LD	C,L
 469:	0305' CD9303  		CALL	BSTSEC
 470:	0308' 018000  		LD	BC,BUFF
 471:	030B' CD9903  		CALL	BSTDMA
 472:			;1.2	LD	BC,0001		; Force a Directory Write
 473:	030E' 010000  		LD	BC,0000		; No forced writes
 474:	0311' CDA503  		CALL	BWRIT
 475:	0314' B7      		OR	A
 476:	0315' 2805    		JR	Z,L0523
 477:	0317' 118B05  		LD	DE,WRTERR
 478:	031A' 1820    		JR	ABORT
 479:			
 480:	031C' ED4BA207	L0523:	LD	BC,(SCWRTN)
 481:	0320' 03      		INC	BC
 482:	0321' ED43A207		LD	(SCWRTN),BC
 483:	0325' E1      		POP	HL
 484:	0326' D1      		POP	DE
 485:	0327' C1      		POP	BC
 486:	0328' C9      		RET
 487:			
 488:	0329' 3A9C07  	RSELEC:	LD	A,(DEFDRV)	; Get entry drive from storage
 489:	032C' 4F      		LD	C,A		; ..set regs
 490:	032D' 0600    		LD	B,0
 491:	032F' C5      		PUSH	BC		; Save drive vector
 492:	0330' 110100  		LD	DE,0001H	; ..to login drive
 493:	0333' CD8703  		CALL	BSELDK		; Do it via BIOS to sync
 494:	0336' D1      		POP	DE		; Restore drive vector for Dos Call
 495:	0337' 0E0E    	LOGDOS:	LD	C,14		; ..and relog DOS
 496:	0339' C30500  		JP	BDOS
 497:			
 498:			;.....
 499:			; Abort to DOS.  Print message, resync and return gracefully
 500:			; ENTER: DE Points to error message
 501:			
 502:	033C' D5      	ABORT:	PUSH	DE		; Save error address
 503:	033D' CD2903  		CALL	RSELEC		; Re-Sync BIOS and BDOS
 504:	0340' D1      		POP	DE
 505:	0341' CD5303  		CALL	WRTLIN
 506:	0344' 3A9B07  	EXIT:	LD	A,(EXPERT)	; Get the Mode Flag
 507:	0347' B7      		OR	A		; Are we Interactive?
 508:	0348' CA5100  		JP	Z,INTACL	; ..jump if so
 509:	034B' ED7B1608	EXIT0:	LD	SP,(STACK)	; Restore stack pointer
 510:	034F' C9      		RET			; ..and return
 511:			
 512:			;.....
 513:			; Write a Carriage Return/Line Feed combination to Console
 514:			
 515:	0350' 11CD06  	CRLF:	LD	DE,CRLFM	; Point to CRLF string
 516:						;..and fall thru to write line
 517:			;.....
 518:			; Print message addressed in DE
 519:			
 520:	0353' 0E09    	WRTLIN:	LD	C,9		; Print error message
 521:	0355' C30500  		JP	BDOS
 522:			
 523:			;.....
 524:			; Print message addressed in DE, and get character from operator
 525:			; Return with Zero Set (Z) if "Y" or "y", else abort
 526:			
 527:	0358' CD5303  	GETACT:	CALL	WRTLIN
 528:	035B' 110E05  		LD	DE,DPROM1	; Print "Y/N" part of prompt
 529:	035E' CD5303  		CALL	WRTLIN
 530:	0361' CD6C03  		CALL	GETCH		; Get console char in uppercase
 531:	0364' FE59    		CP	'Y'
 532:	0366' C8      		RET	Z		; ..or "Y"
 533:	0367' CD2903  		CALL	RSELEC		; User entered No response, so reselect
 534:	036A' 18D8    		JR	EXIT		; ..and quit
 535:			
 536:			;.....
 537:			; Get char from Console in Uppercase via DOS call
 538:			
 539:	036C' 0E01    	GETCH:	LD	C,1		; Get console char command
 540:	036E' CD0500  		CALL	BDOS
 541:	0371' FE03    		CP	3		; Is it a Control-C?
 542:	0373' 28D6    		JR	Z,EXIT0		; ..Quit here if so
 543:	0375' FE61    		CP	'a'		; Is it less than "a"?
 544:	0377' D8      		RET	C		; ..return if so
 545:	0378' FE7B    		CP	'z'+1		; Is it Greater than "z"?
 546:	037A' D0      		RET	NC		; ..return if so
 547:	037B' E65F    		AND	5FH		; Else make uppercase
 548:	037D' C9      		RET
 549:			
 550:			;.....
 551:			; Move 32 bytes from memory addressed by HL to that addressed by DE
 552:			
 553:	037E' 0620    	MOVE32:	LD	B,32
 554:	0380' 7E      	MOV32A:	LD	A,(HL)
 555:	0381' 12      		LD	(DE),A
 556:	0382' 23      		INC	HL
 557:	0383' 13      		INC	DE
 558:	0384' 10FA    		DJNZ	MOV32A
 559:	0386' C9      		RET
 560:			
 561:			;-----------------------------------------------
 562:			;	BIOS Vectors and interface
 563:			;-----------------------------------------------
 564:			
 565:	0387' C5      	BSELDK:	PUSH	BC
 566:	0388' 011800  		LD	BC,18H
 567:	038B' 1824    		JR	GOBIOS
 568:			
 569:	038D' C5      	BSTTRK:	PUSH	BC
 570:	038E' 011B00  		LD	BC,1BH
 571:	0391' 181E    		JR	GOBIOS
 572:			
 573:	0393' C5      	BSTSEC:	PUSH	BC
 574:	0394' 011E00  		LD	BC,1EH
 575:	0397' 1818    		JR	GOBIOS
 576:			
 577:	0399' C5      	BSTDMA:	PUSH	BC
 578:	039A' 012100  		LD	BC,21H
 579:	039D' 1812    		JR	GOBIOS
 580:			
 581:	039F' C5      	BREAD:	PUSH	BC
 582:	03A0' 012400  		LD	BC,24H
 583:	03A3' 180C    		JR	GOBIOS
 584:			
 585:	03A5' C5      	BWRIT:	PUSH	BC
 586:	03A6' 012700  		LD	BC,27H
 587:	03A9' 1806    		JR	GOBIOS
 588:			
 589:	03AB' C5      	BSKEW:	PUSH	BC
 590:	03AC' 012D00  		LD	BC,2DH
 591:	03AF' 1800    		JR	GOBIOS
 592:			
 593:	03B1' E3      	GOBIOS:	EX	(SP),HL
 594:	03B2' E5      		PUSH	HL
 595:	03B3' 2A0100  		LD	HL,(BASE+1)
 596:	03B6' 09      		ADD	HL,BC
 597:	03B7' C1      		POP	BC
 598:	03B8' E3      		EX	(SP),HL
 599:	03B9' C9      		RET
 600:			
 601:			;.....
 602:			;  System messages
 603:			
 604:	03BA' 0D0A0A07	BADDRV:	DEFB	CR,LF,LF,BELL,'Illegal drive name$'
	      496C6C65
	      67616C20
	      64726976
	      65206E61
	      6D6524
 605:			
 606:	03D1' 0D0A0744	ALREDY:	DEFB	CR,LF,BELL,'Directory already initialized$'
	      69726563
	      746F7279
	      20616C72
	      65616479
	      20696E69
	      7469616C
	      697A6564
	      24
 607:			
 608:	03F2' 0D0A074E	NOSPAC:	DEFB	CR,LF,BELL,'Not enough directory space on disk$'
	      6F742065
	      6E6F7567
	      68206469
	      72656374
	      6F727920
	      73706163
	      65206F6E
	      20646973
	      6B24
 609:			
 610:	0418' 0D0A494E	PROMPT:	DEFB	CR,LF,'INITDIR  Ver ',VERS/10+'0','.',VERS MOD 10 + '0'
	      49544449
	      52202056
	      65722031
	      2E32
 611:	042A'         		DATE
 612:	0435' 0D0A0A  		DEFB	CR,LF,LF
 613:	0438' 20202049		DEFB	'   Initializing a Disk for P2DOS Date/Time Stamps which'
	      6E697469
	      616C697A
	      696E6720
	      61204469
	      736B2066
	      6F722050
	      32444F53
	      20446174
	      652F5469
	      6D652053
	      74616D70
	      73207768
	      696368
 614:	046F' 20616C72		DEFB	' already ',CR,LF
	      65616479
	      200D0A
 615:	047A' 20202063		DEFB	'   contains files marked with DateStamper Stamps may '
	      6F6E7461
	      696E7320
	      66696C65
	      73206D61
	      726B6564
	      20776974
	      68204461
	      74655374
	      616D7065
	      72205374
	      616D7073
	      206D6179
	      20
 616:	04AF' 696E7661		DEFB	'invalidate',CR,LF
	      6C696461
	      74650D0A
 617:	04BB' 20202074		DEFB	'   the existing DateStamper Times and Dates!',CR,LF,'$'
	      68652065
	      78697374
	      696E6720
	      44617465
	      5374616D
	      70657220
	      54696D65
	      7320616E
	      64204461
	      74657321
	      0D0A24
 618:			
 619:	04EA' 0D0A2020	DPROMP:	DEFB	CR,LF,'     Confirm Initialize Drive $'
	      20202043
	      6F6E6669
	      726D2049
	      6E697469
	      616C697A
	      65204472
	      69766520
	      24
 620:	050B' 3A2024  	DPROM0:	DEFB	': $'
 621:	050E' 28592F5B	DPROM1:	DEFB	'(Y/[N]) : $'
	      4E5D2920
	      3A2024
 622:			
 623:	0519' 0D0A0A49	MESG0:	DEFB	CR,LF,LF,'Initialize which Disk for P2DOS Date/Time Stamps? : $'
	      6E697469
	      616C697A
	      65207768
	      69636820
	      4469736B
	      20666F72
	      20503244
	      4F532044
	      6174652F
	      54696D65
	      20537461
	      6D70733F
	      203A2024
 624:	0551' 0D0A0A49	MESG1:	DEFB	CR,LF,LF,'Initialize another Disk? $'
	      6E697469
	      616C697A
	      6520616E
	      6F746865
	      72204469
	      736B3F20
	      24
 625:	056E' 07082008	MESG2:	DEFB	BELL,BS,' ',BS,'$'
	      24
 626:			
 627:	0573' 0D0A0744	RDERR:	DEFB	CR,LF,BELL,'Directory read error$'
	      69726563
	      746F7279
	      20726561
	      64206572
	      726F7224
 628:			
 629:	058B' 0D0A0744	WRTERR:	DEFB	CR,LF,BELL,'Directory write error$'
	      69726563
	      746F7279
	      20777269
	      74652065
	      72726F72
	      24
 630:			
 631:	05A4' 0D0A    	HLPMSG:	DEFB	CR,LF
 632:	05A6' 55736167		DEFB	'Usage: Prepare disk for CP/M-3 (P2DOS) style date/time'
	      653A2050
	      72657061
	      72652064
	      69736B20
	      666F7220
	      43502F4D
	      2D332028
	      5032444F
	      53292073
	      74796C65
	      20646174
	      652F7469
	      6D65
 633:	05DC' 20737461		DEFB	' stamping',CR,LF,LF
	      6D70696E
	      670D0A0A
 634:	05E8' 53796E74		DEFB	'Syntax:',CR,LF
	      61783A0D
	      0A
 635:	05F1' 09494E49		DEFB	'	INITDIR		- Enter Interactive Mode',CR,LF
	      54444952
	      09092D20
	      456E7465
	      7220496E
	      74657261
	      63746976
	      65204D6F
	      64650D0A
 636:	0615' 09494E49		DEFB	'	INITDIR d:	- Initialize drive "d"',CR,LF
	      54444952
	      20643A09
	      2D20496E
	      69746961
	      6C697A65
	      20647269
	      76652022
	      64220D0A
 637:	0639' 09494E49		DEFB	'	INITDIR //	- Display this message',CR,LF,LF
	      54444952
	      202F2F09
	      2D204469
	      73706C61
	      79207468
	      6973206D
	      65737361
	      67650D0A
	      0A
 638:	065E' 4E6F7465		DEFB	'Note: ZCNFG may be used to configure a flag to suppress',CR,LF
	      3A205A43
	      4E464720
	      6D617920
	      62652075
	      73656420
	      746F2063
	      6F6E6669
	      67757265
	      20612066
	      6C616720
	      746F2073
	      75707072
	      6573730D
	      0A
 639:	0697' 20202020		DEFB	'      drive confirmation prompt and status messages',CR,LF,'$'
	      20206472
	      69766520
	      636F6E66
	      69726D61
	      74696F6E
	      2070726F
	      6D707420
	      616E6420
	      73746174
	      7573206D
	      65737361
	      6765730D
	      0A24
 640:			
 641:	06CD' 0D0A24  	CRLFM:	DEFB	CR,LF,'$'
 642:			
 643:	06D0' 070D0A2D	EXMSG:	DEFB	BELL,CR,LF,'--> DateStamper !!!TIME&.DAT File Found <--',CR,LF
	      2D3E2044
	      61746553
	      74616D70
	      65722021
	      21215449
	      4D45262E
	      44415420
	      46696C65
	      20466F75
	      6E64203C
	      2D2D0D0A
 644:	0700' 0950726F		DEFB	'	Proceed anyway $'
	      63656564
	      20616E79
	      77617920
	      24
 645:			
 646:	0711' 0D0A2E2E	TMSG1:	DEFB	CR,LF,'...Reading Directory Entries...$'
	      2E526561
	      64696E67
	      20446972
	      6563746F
	      72792045
	      6E747269
	      65732E2E
	      2E24
 647:	0733' 0D0A2E2E	TMSG2:	DEFB	CR,LF,'...Writing Initialized Directory...$'
	      2E577269
	      74696E67
	      20496E69
	      7469616C
	      697A6564
	      20446972
	      6563746F
	      72792E2E
	      2E24
 648:			
 649:	0759' 0D0A7031	DBG1:	DEFB	CR,LF,'p1$'
	      24
 650:	075E' 0D0A7032	DBG2:	DEFB	CR,LF,'p2$'
	      24
 651:	0763' 0D0A7033	DBG3:	DEFB	CR,LF,'p3$'
	      24
 652:	0768' 0D0A7034	DBG4:	DEFB	CR,LF,'p4$'
	      24
 653:	076D' 0D0A7035	DBG5:	DEFB	CR,LF,'p5$'
	      24
 654:			
 655:			;---------------------------------------------------------
 656:			;		D A T A       A R E A
 657:			;---------------------------------------------------------
 658:			
 659:	0772' 00000000	DATTIM:	DEFB	0,0,0,0,0	; Initial date value
	      00
 660:	0777' 00212121	TDFCB:	DEFB	0,'!!!TIME&DAT',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
	      54494D45
	      26444154
	      00000000
	      00000000
	      00000000
	      00000000
	      00000000
 661:	0797' 00000000		DEFB	0,0,0,0
 662:			
 663:	079B'         	EXPERT:	DEFS	1		; Expert Flag (0=Expert, <>0=Interactive)
 664:	079C'         	DEFDRV:	DEFS	1		; Drive logged by Dos on Entry
 665:	079D'         	DRVNUM:	DEFS	1		; Storage for drive letter
 666:	079E'         	DIRMAX:	DEFS	2		; Number of directory entries on disk
 667:	07A0'         	NDIRSC:	DEFS	2		; Number of directory sectors
 668:	07A2'         	SCWRTN:	DEFS	2		; Number of sectors read/written
 669:	07A4'         	SKWTBL:	DEFS	2		; Address of skew table
 670:	07A6'         	DBUFFR:	DEFS	IDLEN		; 32-byte directory date/time buffer
 671:	07C6'         		DEFS	80		; Room for stack
 672:	0816'         	STACK:	DEFS	2		; Location to save entry stack pointer
 673:	0818'         	RAMBUF:				; Buffer starts here, goes up
 674:			
 675:	0818'         		END



Statistics:

     5	passes
     0	jr promotions
   192	symbols
     0	bytes

     1	macro calls
    30	macro bytes
     0	invented symbols



Symbol Table:

abort            33c'    
alredy           3d1'    
baddrv           3ba'    
base           =   0     
bbcalret       =fd5a     
bbconin        =fd94     
bbconout       =fd9f     
bbconst        =fdaa     
bbcpboot       =fcc3     
bbcrtcini      =fc03     
bbcrtfill      =fc09     
bbcurset       =fc21     
bbdiv16        =fcdb     
bbdmaset       =fcb7     
bbdprmset      =fd17     
bbdriveid      =fcf3     
bbdsksel       =fcbd     
bbeidck        =fd23     
bbepmngr       =fd1d     
bbexec         =fd29     
bbfdrvsel      =fcd5     
bbfhome        =fc81     
bbflopio       =fc93     
bbfread        =fc87     
bbfwrite       =fc8d     
bbhdboot       =fd0b     
bbhdgeo        =fd05     
bbhdinit       =fced     
bbhdrd         =fcff     
bbhdwr         =fcf9     
bbinictc       =fc57     
bbjtobnk       =fc00     
bbldpart       =fd11     
bbmul16        =fce1     
bboffcal       =fce7     
bbprcvblk      =fc6f     
bbprnchr       =fc99     
bbpsndblk      =fc63     
bbrdtime       =fca5     
bbrdvdsk       =fc75     
bbresctc       =fc5d     
bbsecset       =fcb1     
bbsidset       =fccf     
bbstack        =feb4     
bbstbase       =fe90     
bbsttim        =fc9f     
bbtrkset       =fcab     
bbu0ini        =fc39     
bbu1ini        =fc51     
bbu1rx         =fc45     
bbu1st         =fc4b     
bbu1tx         =fc3f     
bbuplchr       =fc69     
bbvcpmbt       =fcc9     
bbvoid         =fd6a     
bbwrvdsk       =fc7b     
bdos           =   5     
bell           =   7     
bread            39f'    
bs             =   8     
bseldk           387'    
bskew            3ab'    
bstdma           399'    
bstsec           393'    
bsttrk           38d'    
buff           =  80     
bwrit            3a5'    
clrl              77'    
cntlop           154'    
cr             =   d     
crdureg        =fc27     
crlf             350'    
crlfm            6cd'    
date               0     
dattim           772'    
dbg1             759'    
dbg2             75e'    
dbg3             763'    
dbg4             768'    
dbg5             76d'    
dbuffr           7a6'    
defdrv           79c'    
delay          =fd85     
dirmax           79e'    
dly1           =fd89     
dly2           =fd87     
dprom0           50b'    
dprom1           50e'    
dpromp           4ea'    
drvnum           79d'    
enter              0'    
exit             344'    
exit0            34b'    
exmsg            6d0'    
expert           79b'    
fcb            =  5c     
fin            =fdc4     
fout           =fde1     
fstat          =fdb5     
getact           358'    
getch            36c'    
getdrv            7b'    
gobios           3b1'    
help             26f'    
help0            269'    
hlpmsg           5a4'    
idlen          =  20     
initil           14a'    
initl             ce'    
intacl            51'    
intact            6e'    
intrdi         =fe0f     
intren         =fdfe     
l0313            232'    
l0316            235'    
l0328            247'    
l044a            284'    
l0452            28c'    
l045f            299'    
l04bf            2d9'    
l04c7            2e1'    
l04d4            2ee'    
l0523            31c'    
lf             =   a     
ll0              165'    
ll1              175'    
ll2              192'    
ll3              227'    
lodbad           2c2'    
loddir           12b'    
logdos           337'    
loop1             31'    
mesg0            519'    
mesg1            551'    
mesg2            56e'    
mmgetp         =fd78     
mmpmap         =fd6b     
mov32a           380'    
move32           37e'    
ndirsc           7a0'    
ngvct             4e'    
nocnt            15e'    
nocnt1           1fc'    
nodrv             8c'    
nogood           263'    
nospac           3f2'    
okdrv             94'    
okdrv0            b2'    
prompt           418'    
quiet             16'    
rambuf           818'    
rdblok           276'    
rderr            573'    
rldrom         =fe79     
rselec           329'    
sconin         =fc2d     
sconout        =fc27     
sconst         =fc33     
scwrtn           7a2'    
secsiz         =  80     
sintvec        =fff0     
skwtbl           7a4'    
stack            816'    
start             17'    
syscmlo        =feb4     
syscom         =fc00     
sytimr         =fe19     
tab            =   9     
tdfcb            777'    
tmsg1            711'    
tmsg2            733'    
u0isr          =fe25     
u1isr          =fe59     
u1nul          =fe70     
uastav         =fe84     
uastkb         =fe86     
uisre          =fe4e     
uisri          =fe32     
vconin         =fc15     
vconout        =fc0f     
vconst         =fc1b     
vers           =   c     
voidisr        =fe22     
wrblok           2c7'    
wrlast           25a'    
wrt0             1bc'    
wrterr           58b'    
wrtlin           353'    
wrtna0           1f9'    
wrtna1           202'    
wrtnam           1cc'    
z3eadr             9'    
