ZCNFG is copyright by A. E. Hawley 01/88, 11/89, 08/90, 08/91.
It may be freely distributed, but it must not be sold 
either separately or as part of a package without the 
written consent of the author.
The author may be reached via electronic mail at the 
Ladera Znode in Los Angeles, 310-670-9465
or by mail at:	6032 Chariton Ave.
		Los Angeles, CA 90056

ZCNFG is released for distribution through the Z-system 
users group, ZSIG. Many Znodes include ZSIG releases
among their programs available for download.

*************** RELEASE HISTORY ****************

V2.4 - 12/12/92 - (Al Hawley & Terry Hazen)
-Fixed STRCPY in CFGSUBS.Z80 to handle cases where the string delimiter
also has its high bit set. An unusual but possible situation. (Al Hawley)
-Also in CFGSUBS, included a call to BDOS 17 (searchfirst) to avoid
finding the wrong file copy because of the ZSDOS search path. Thanks to
Terry Hazen for this change.
V2.3 - 02/10/92 - (Al Hawley)
-Restored CP/M compatibility inadvertently compromised in V2.1
-Fixed a bug which sometimes caused a non-extant drive to be accessed.
V2.2 - 01/30/92 - (Al Hawley)
-Changes in one menu item are now reflected in all other items that
 reference the same configuration data, even if they are in other menus.
-Uses V4 TCAP graphics when present in ZCNFG COMMANDS portion of menu.
-BUG FIX: New routine CONIN in CFGSUBS.Z80 to wait for and get a console
 keystroke using BDOS function 6. Calls to CONIN replace wait loops
 in which CIN was used for the same purpose. Fixes a bug that prevented
 entry of a null (^@) from the keyboard via Function 9.
-Modules affected: ZCNFG.Z80, CFGSUBS.Z80

V2.1 - 11/01/91 - (Al Hawley)
-Functions 1,5, and 9 modified to change ONLY the 7 ASCII bits
 in the configuration block, and ignore the high bit during
 screen display. This allows the high bit in such data to be
 used as an independent flag, configurable with the SWITCH function.
-Added several more exit functions (W,^W,^Q,^X) and menu select
 keys (^A,^S,^D,^F). Changed the internal ZCNFG menu to be more
 compatible with highlighted screen display and less complex. The '?'
 selection in this menu now displays a description of all the alternate
 keys that control ZCNFG operation.
-ZCNFG21.CFG is reformatted for compatibility with highlighted
 screen displays.
-Added Function 9 which accepts a keystroke to update
 an ASCII byte (^@ to DEL) which is displayed on the screen
 with translation of control characters to ^X form and to
 SP or DEL for those non-printing characters. This function
 is useful for escape character and printer string configuration.
-Modified keyboard input error handling. Input errors
 now redraw only the prompt instead of the entire screen.
 This speeds response dramatically.
-Revised code for Function 1 and Function 5 to use
 a value at S_LIST (from the menu list) in the CFG
 overlay as the terminator byte for the current string.
 If S_LIST is zero, then a space delimited string is
 assumed. (The value at S_LIST could also be 20h. Other
 normal values are Null and '$'). There is no provision
 for HBS string termination.
-modules affected: ZCNFG.Z80, CFGSUBS.Z80, ZCNFGCFG.LBR

V2.0 - 09/17/91 - (Al Hawley)
-fixed bug in the parsing of DU form. Also enhanced to
 allow a leading space during input to leave drive
 unchanged and trailing space leaves User unchanged.
 Thus, " 14" changes only the user, and "C " changes
 only the drive.
-revised HELP screen to reflect current configuration
 and new LBR arguments on the command line.
-revised ZCNFG.HLP to reflect the new syntax and clarify
 description of defaults.
-revised command line parsing to provide new syntax
 which allows specification of the CFG library on the
 command line. Syntax is a superset of the old syntax.
-added error traps in FN2, FN3, FN6 for user input.
-replaced code with SYSLIB routines in many places.
-modules affected: ZCNFG.Z80, CFGSUBS.Z80, CFGLIB.REL,
 ZCNFG.CFG, GETZFS.Z80(in CFGLIB.LBR), ZCNFG.HLP.

ZCNFG v1.9 - 08/21/91 - (Al Hawley)

-Added ability to extract CFG files from a library of such 
 files compatible with NULU and SYSLIB. CONFIG.LBR is expected 
 to be found in ZCNFG's alternate directory. The LBR will be 
 searched first for the required CFG file if there is no DIR 
 form (D:, U:, DU:, or DIR:) specified in the SECOND argument 
 of the invoking command tail.
-The configuration file has been updated to contain a new
 menu item for changing the name of the library which contains
 CFG files (distribution default is CONFIG).
-several new error traps and associated messages help prevent
 use of wrong or damaged CFG overlays. Hopefully, they will never
 be seen!
-documentation files have been updated to include the new
 features in versions 1.8 and 1.9. Terry Hazen contributed a set 
 of help files, ZCFG.HLP and ZCNFG.HLP, which have been edited
 to reflect version 1.9 features. These files are for the standard
 ZCPR help utility, and are a complete replacement for ZCNFG.WS.
-Configuration function 7 has been generalized to rotate a bit in
 a bit field of from 2 to 7 bits located anywhere in a byte. Current
 implementations in CFG files (the 3 lsb in a byte) are unaffected.

ZCVFG v1.8 - 08/09/91 - (Al Hawley)

-Reformatted & reorganized source code.
-Revised CFG help function to recognize ':' or Form Feed character 
 at the start of a line in help screens. These characters
 start a new screen but are not displayed. Help screens are now 
 much easier to compose.
-Revised CFG file search logic to speed up response for common
 invocation situations. If user has provided a partial or complete 
 dir:/du: form, the alternate directory will not be searched. 
 When the CFG file name comes from the target file configuration
 block, the alternate directory is searched first.

ZCNFG v1.7 - 08/12/90 - (Al Hawley)

Corrected a bug in the TEXTLC routine.

ZCNFG v1.6 - 07/21/90 - (Al Hawley)

Added logic in FILINIT routine to detect Z34 type 4 executable files,
and skip over the type 4 header to find the program's configuration
block. ZCNFG will now work with all types of Z system and CP/M files.

ZCNFG v1.5 - 05/28/90 - (Al Hawley)

Replaced a lost instruction in the TABS routine in CFGSUBS.Z80 which
caused the column counter to be improperly maintained and resulted in
eratic expansion of tabs.

ZCNFG v1.4 - 11/03/89 - (Al Hawley)

Reconfigured to allow for 256 byte configuration block in the target
program. Added screen and cursor controls which become effective if
a Z-system is present. ZCNFG functions in a CP/M system without
terminal-specific functions. Removed the option to use '$' terminated
strings in the .CFG files. All strings must be null terminated. Since
this was the recommended usage in V 1.3, there should be minimal
impact on existing .CFG files. Those that result in garbage at the
end of screen displays should be patched or re-assembled with a null
replacing any '$' terminators. This change was required to accomodate
the V4 VLIB routines which do not accept the '$' string terminator.

ZCNFG v1.3 - 12/19/88

This is the release version of ZCNFG. Earlier versions were developmental,
and contained functions that behave differently from this one. To avoid
problems in using ZCNFG, older versions should be discarded along with
their .CFG files and replaced with updated .CFG files designed to the
interface requirements outlined in ZCNFG.WS (or the equivalent text
file, ZCNFG.DOC).
		Al Hawley, Ladera Znode, (213) 670-9465

ZCNFG v1.2, v1.1, and v1.0 were distributed only to selected individuals
for Beta testing. (aeh)
--------------------
10 Feb 92  10:41 
-Revise Z3 initialization in INIT: to always call GZ3INIT, store the 
returned flags in A at GZ3FLG. Change name of Z3MSGF to Z3ENVF and 
make its values 0 or -1 (was Z, NZ). Values at ENVPTR, etc, are now
always valid.
-Remove CST: and CST6: from CFGSUBS. Use the BIOS-oriented CST from
SYSLIB. This removes a call that is not supported by DRI BDOS, the
0FEh value in A for BDOS function 6 (console status). This was a
major CP/M compatibility issue introduced in the attempt to input
a null (^@) value from the console for ZCNFG FN9.
-Simplify vlib oriented routines in CFGSUBS. VLIB functions return
with no action when TCAP is inadequate. Simplify the graphics routine
HLINE for the same reason.
-ALL the above changes aim at CP/M compatibility.
                                            