ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее FDDTEST COM                  FDDTEST LST   Ђ    	 
    FDDTEST LST  Ђ         FDDTEST LSTo E            FDDTEST Z80   Ђ        !  FDDTEST Z80} 2" # $ %         ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   1:			
   2:			
   3:			;
   4:			;=======================================================================
   5:			;
   6:			; Modular Z80 DarkStar (NE Z80) SysBios
   7:			;
   8:			;=======================================================================
   9:			;
  10:			; Original code:
  11:			; Z80 Nuova Elettronica Monitor 390 su eprom 2532 (4k)
  12:			;
  13:			; Disassembled and reconstructed by
  14:			; Piergiorgio Betti <pbetti@lpconsul.net> on 2005 01 26
  15:			;
  16:			; Latest non modularееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 BIOS is DARKSTAR-MONITOR-0.9.0.asm
  17:			; dated 20140531
  18:			; - Following addition of MultiF-Board doing complete rewrite of the
  19:			;   monitor/BIOS has been started.
  20:			;   Major goals:
  21:			;   o Modularization: Now monitor can grow up to 256kb instead of 4kb
  22:			;     :-)
  23:			;   o Specialized images fitted in memory page (4kb) or multiples
  24:			;   o Full support for new hardware
  25:			;   o I/O rewrite for MODE 2 interrupts
  26:			;   Minor goals:
  27:			;   o Full ееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееееее Н,  Н‚Н‘Н8НД 0НЊ Н‡Н   Г  "4нS6Й    хе!R:E …o~g:N жрґ2N УЦбсЙ Н,  Н‚: OН‘Н8НД 0НЊ Н‡НАГ0нCF ЙнCC ЙнCA Йy2E ЙггггЙН–  ЫРЛG(zі х п>РУРЇУЦ<ЙЙ!? :E …oЙЕХ>УРН›OН»ЫСwyжСБЙЕХН»~УС:C УТ:F УЧ>УРHН›Aж(НД вЫСwСБЙ:L ЛЗ:L Л‡ХЭ!42L НЪ e
у*A Э^ЭV:L ЛG(>€УРН–0'ЫРЛO(чЫЧw#ф>ЁУРН–0ЫРЛO(ч~УЧ#zі сыHН›Aж\(°:K Лw Лч2K НД –хЇУЦсСЙ!N yю  Л®ЙЛоЙ                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     code clean-up & reoarganization
  28:			; ---------------------------------------------------------------------
  29:			; Revisions:
  30:			; 20140905 - Modified hexadecimal constants to 0xxH format to widely
  31:			;            accepeted by different assemblers
  32:			; ---------------------------------------------------------------------
  33:			
  34:			
  35:			; ---------------------------------------------------------------------
  36:			; SYSBIOS
  37:			;
  38:			; This is the BIOS non-resident pted
  60:			; in the EEPROM in this way:
  61:			;
  62:			;	+-----------------+
  63:			;	+    SysCommon    +
  64:			;	+   FC00 - FFFF   +
  65:			;	+     SysBios     +     <-- EEPROM page 1 ($C1000)
  66:			;	+   F000 - FBFF   +
  67:			;	+-----------------+
  68:			;	+-----------------+
  69:			;	+    SysCommon    +
  70:			;	+   FC00 - FFFF   +
  71:			;	+   BootMonitor   +     <-- EEPROM page 0 ($C0000)
  72:			;	+   F000 - FBFF   +
  73:			;	+-----------------+
  74:			;
  75:			; -------------------	PRVTOP		EQU	004FH		; top of private area storage
 107:	004F          	COLBUF		EQU	PRVTOP		; byte:
 108:	004E          	DSELBF		EQU	COLBUF-1	; byte: floppy drive select status
 109:								; - bits: 0 = drive 0
 110:								; - bits: 1 = drive 1
 111:								; - bits: 2 = drive 2
 112:								; - bits: 3 = drive 3
 113:								; - bits: 4 = unused
 114:								; - bits: 5 = head select
 115:								; - bits: 6 = motor on (disabled by jumper)
 116:								; - bits: 7 = unused
 117:	004D          	KBDBYTE		EQupt status (on/off)
 134:								;         6: 0 = floppy home on err	1 = no home on err
 135:								;         7: 0 = unlock LBA free addressing (unpartitioned)
 136:	004A          	CURSSHP		EQU	TMPBYTE-1	; cursor shape
 137:	0048          	CURPBUF		EQU	CURSSHP-2	; word: cursor position
 138:	0046          	FTRKBUF		EQU	CURPBUF-2	; word: track # for i/o (0 - 65535)
 139:	0045          	FDRVBUF		EQU	FTRKBUF-1	; byte: drive number for i/0 (0 - 15)
 140:	0043          	FSECBUF		EQU	FDRVBUF-2	; word: sector # fortion of the new (banked)
  39:			; BIOS/Monitor for the NE Z80 (aka DarkStar)
  40:			;
  41:			; ---------------------------------------------------------------------
  42:			;
  43:			; Full BIOS memory scheme:
  44:			;
  45:			;	+-----------------+
  46:			;	+    SysCommon    +   <-- Resident portion. Common to all images
  47:			;	+   FC00 - FFFF   +
  48:			;	+-----------------+
  49:			;	+-----------------+   +-----------------+   +-----------------+
  50:			;	+     SysBios     +   +   BootMonitor --------------------------------------------------
  76:			;
  77:			; Define which assembler we are using
  78:			;
  79:			
  80:			; PASMO	EQU	1
  81:	0001          	MZMAC	EQU	1
  82:			; ZMAC	EQU	1			; ZMAC Z80 assembler, not Linux/Unix version
  83:			
  84:			; ... only one at a time can be active (1) ...
  85:			
  86:			;
  87:			; Monitor version numbers (major.minor)
  88:			;
  89:	0033          	MONMAJ		EQU	'3'
  90:	0033          	MONMIN		EQU	'3'
  91:			
  92:			;
  93:			; Buffers addresses lU	DSELBF-1	; byte: store keyboard input
 118:	004C          	MIOBYTE		EQU	KBDBYTE-1	; byte:
 119:								; - bits: 0: 0 = floppy write		1 = floppy read
 120:								;         1: 0 = no ctrl on keypress	1 = ctrl on keypress
 121:								;         2: 0 = scroll			1 = no scroll
 122:								;         3: 0 = accept lowercase	1 = convert to uppercase
 123:								;         4: 0 = destr. bkspace		1 = non destr. bkspace
 124:								;         5: 0 = console out		1 = serial out
 125:								;         6: 0 = disp. aor i/o (1 .. 65535)
 141:	0041          	FRDPBUF		EQU	FSECBUF-2	; word: dma address for i/o
 142:	003F          	FSEKBUF		EQU	FRDPBUF-2	; word: current track number for drive A/B
 143:	003E          	RAM3BUF		EQU	FSEKBUF-1	; byte:
 144:	003D          	RAM2BUF		EQU	RAM3BUF-1	; byte:
 145:	003C          	RAM1BUF		EQU	RAM2BUF-1	; byte:
 146:	003B          	RAM0BUF		EQU	RAM1BUF-1	; byte:
 147:	003A          	RST7SP3		EQU	003AH		; keep clear area of RST38 (RST7)
 148:	0039          	RST7SP2		EQU	0039H
 149:	0038  +   +     [Other]     +
  51:			;	+   F000 - FBFF   +   +   F000 - FBFF   +   +   F000 - FBFF   +
  52:			;	+-----------------+   +-----------------+   +-----------------+
  53:			;
  54:			;	         ^                     ^                     ^
  55:			;	         |                     |                     |
  56:			;	         ---------------------------------------------
  57:			;	                      Variable section
  58:			;
  59:			; The above are always assembled at ORG F000 and linked and allocaabels
  94:			;
  95:			
  96:			; -- Global --
  97:	0003          	IOBYTE		EQU	0003H		; byte: Intel IOBYTE (CP/M 2.2 only)
  98:	0004          	CDISK		EQU	0004H		; byte: Last logged drive
  99:	0006          	BTPASIZ		EQU	0006H		; word: size of tpa + 1
 100:			;
 101:			; -- Private --
 102:	000B          	HMEMPAG		EQU	000BH		; byte: highest ram page
 103:	000C          	BBCBANK		EQU	000CH		; byte: current bank
 104:	000D          	BBCSTCK		EQU	000DH		; word: current stack
 105:					;
 106:	004F          ll chars	1 = obscure non punct.
 126:								;         7: 0 = ctrl chr set 1		1 = ctrl chr set 2
 127:	004B          	TMPBYTE		EQU	MIOBYTE-1	; byte: transients flags
 128:								; - bits: 0: 0 = high in cursor addressing
 129:								;         1: 0 = ESC catched by ANSI driver
 130:								;         2: 0 = CSI catched by ANSI driver
 131:								;         3: 0 = Two byte code ESC seq. from serial
 132:								;         4: 0 = Plain serial i/o (disable ANSI driver)
 133:								;         5: 0 = store interr          	RST7SP1		EQU	0038H
 150:	002F          	RSRVBUF		EQU	RST7SP1-9	; free 9 byte buffer
 151:	002D          	APPBUF		EQU	RSRVBUF-2	; word: generic buffer
 152:	002C          	COPSYS		EQU	APPBUF-1	; Op system type for partition selection
 153:	002B          	UART0BR		EQU	COPSYS-1	; UART 0 baudrate
 154:	002A          	UART1BR		EQU	UART0BR-1	; UART 1 baudrate
 155:	0029          	CTC0TC		EQU	UART1BR-1	; CTC channel 0 time constant
 156:	0028          	CTC1TC		EQU	CTC0TC-1	; CTC channel 1 time constant

 178:			;
 179:	000D          	CR		EQU	0DH		; ascii CR & LF
 180:	000A          	LF		EQU	0AH
 181:	000C          	FF		EQU	0CH		; FORM FEED (clear screen)
 182:	001B          	ESC		EQU	1BH		; ESCape
 183:	FFFF          	TRUE		EQU	-1
 184:	0000          	FALSE		EQU	0
 185:	0100          	TPA		EQU	0100H		; TPA base address (for CP/M)
 186:			
 187:			;
 188:			; Modules equs
 189:			;
 190:				; delay
 191:	00F6          	MSCNT		EQU	246
 192:				; mmu
 193:	000D          	MMUTSTPAGE	EQU	0DH		; logical page us---------------------------------------------------------------
 223:	0080          	CRTBASE		EQU	80H
 224:				; RAM0 for ascii chars & semi6. Combined with RAM1 and RAM2 for graphics
 225:	0080          	CRTRAM0DAT	EQU	CRTBASE		; RAM0 access: PIO0 port A data register
 226:	0082          	CRTRAM0CNT	EQU	CRTBASE+2	; RAM0 access: PIO0 port A control register
 227:				; Printer port
 228:	0081          	CRTPRNTDAT	EQU	CRTBASE+1	; PRINTER (output): PIO0 port B data register
 229:	0083          	CRTPRNTCNT	EQU	ERVCNT	EQU	CRTBASE+11	; Service (i/o): PIO2 port B control register
 244:	0000          	PRNTBUSYBIT	EQU	0		; Printer BUSY bit		(in)	1
 245:	0001          	CRTWIDTHBIT	EQU	1		; Set 40/80 chars per line	(out)	0
 246:	0002          	PIO2BIT2	EQU	2		; user 1 (input)		(in)	1
 247:	0003          	PIO2BIT3	EQU	3		; user 2 (input)		(in)	1
 248:	0004          	PIO2BIT4	EQU	4		; user 3 (input)		(in)	1
 249:	0005          	CLKSCLK		EQU	5		; DS1320 clock line		(out)	0
 250:	0006          	CLKIO		EQU	6		; DS1320 I/O li 157:	0027          	TIMRCON		EQU	CTC1TC-1	; timer buf
 158:	0026          	CNFBYTE		EQU	TIMRCON-1	; config byte
 159:								; - bits: 0: 0 = UART1 intr disabled	1 = RST8 redir UART1
 160:								;         1: 0 = unused/reserved
 161:								;         2: 0 = unused/reserved
 162:								;         3: 0 = unused/reserved
 163:								;         4: 0 = unused/reserved
 164:								;         5: 0 = unused/reserved
 165:								;         6: 0 = unused/reserved
 166:								;         7: 0 = unused/reserved
 167:	ed for sizing
 194:	D000          	MMUTSTADDR	EQU	MMUTSTPAGE<<12	; logical page used for sizing
 195:			
 196:			; Conventionally all bios/monitor images start at $F000.
 197:			; Except for special cases all code is copied to ram @ $F000.
 198:			; In this case eeprom page 0 is directly mapped into logical space
 199:			; by hardware so we can initialize the system at cold boot.
 200:			;
 201:			; We assume to initialize MMU as follow:
 202:			;
 203:			; +--------+
 204:			; |  F000  |	-> $C0000  eeprom CRTBASE+3	; PRINTER (output): PIO0 port B control register
 230:								; STROBE is generated by hardware
 231:				; RAM1 for graphics. (pixel index by RAM0+RAM1+RAM2)
 232:	0084          	CRTRAM1DAT	EQU	CRTBASE+4	; RAM1 access: PIO1 port A data register
 233:	0086          	CRTRAM1CNT	EQU	CRTBASE+6	; RAM1 access: PIO1 port A control register
 234:				; Keyboard port (negated). Bit 7 is for strobe
 235:	0085          	CRTKEYBDAT	EQU	CRTBASE+5	; KEYBOARD (input): PIO1 port B data register
 236:	0087         ne		(i/o)	1
 251:	0007          	CLKRST		EQU	7		; DS1320 RST line		(out)	0
 252:				; normal set for PIO2 (msb) 01011101 (lsb) that is hex $5D
 253:								; Other bits available to user
 254:				; RAM3 control chars/graphics attributes
 255:	008E          	CRTRAM3PORT	EQU	CRTBASE+14	; RAM3 port
 256:	0000          	CRTBLINKBIT	EQU	0		; Blink
 257:	0001          	CRTREVRSBIT	EQU	1		; Reverse
 258:	0002          	CRTUNDERBIT	EQU	2		; Underline
 259:	0003          	CRTHILITBIT	EQU	3		; Highlight
 260:	0004   000F          	FIFOSTO		EQU	000FH		; fifo queues storage start
 168:	0008          	FIFSIZE		EQU	8		; fifo queue lenght
 169:	000B          	FIFBLOK		EQU	11		; fifo queue size
 170:	000F          	FIFOU0		EQU	FIFOSTO		; uart 0 queue (alternate console)
 171:	001A          	FIFOKB		EQU	FIFOU0+FIFBLOK	; keyboard queue
 172:	0025          	FIFOEND		EQU	FIFOKB+FIFBLOK	; fifo blocks end
 173:			;
 174:	3000          	BLDOFFS		EQU	3000H		; place for disk bootloader
 175:			
 176:			;
 177:			; Some commodity equspage 0
 205:			; +--------+
 206:			; +--------+
 207:			; |  EFFF  |
 208:			; +--------+
 209:			;     ...       -> $00000 to $0EFFF ram
 210:			; +--------+
 211:			; |  0000  |
 212:			; +--------+
 213:			;
 214:			
 215:			
 216:			; include	modules/hwequs.inc.asm
 217:			; Hardware equates
 218:			; ---------------------------------------------------------------------
 219:			
 220:			; ---------------------------------------------------------------------
 221:			; LX529 VIDEO BOARD:
 222:			; ------ 	CRTKEYBCNT	EQU	CRTBASE+7	; KEYBOARD (input): PIO1 port B control register
 237:	0007          	KEYBSTRBBIT	EQU	7		; Strobe bit
 238:				; RAM2 for graphics. (pixel index by RAM0+RAM1+RAM2)
 239:	0088          	CRTRAM2DAT	EQU	CRTBASE+8	; RAM2 access: PIO2 port A data register
 240:	008A          	CRTRAM2CNT	EQU	CRTBASE+10	; RAM2 access: PIO2 port A control register
 241:				; Service/User port
 242:	0089          	CRTSERVDAT	EQU	CRTBASE+9	; Service (i/o): PIO2 port B data register
 243:	008B          	CRTS       	CRTMODEBIT	EQU	4		; ASCII/GRAPHIC mode
 261:				; Beeper port
 262:	008F          	CRTBEEPPORT	EQU	CRTBASE+15	; Beeper port
 263:				; 6545 CRT controller ports
 264:	008C          	CRT6545ADST	EQU	CRTBASE+12	; Address & Status register
 265:	008D          	CRT6545DATA	EQU	CRTBASE+13	; Data register
 266:				; Cursor modes
 267:	0040          	BLISLOWBLOK	EQU	40H		; Blink, slow, block
 268:	004A          	BLISLOWLINE	EQU	4AH		; Blink, slow, line
 269:	0060          	BLIFASTBLOK	EQU	60H		; Blink, fasd
 288:	00A8          	FDCWRITC	EQU	10101000b	; write cmd
 289:	00D0          	FDCRESET	EQU	11010000b	; fdc reset immediate cmd
 290:			; ---------------------------------------------------------------------
 291:			; LX389: PARALLEL INTERFACE
 292:			; ---------------------------------------------------------------------
 293:			; alternate printer port
 294:	0003          	ALTPRNPRT	EQU	03H
 295:			;
 296:			; parallel port PC link
 297:	0003          	PPDATAP		EQU	03H		; Data port
 298:	0002          	PP-------------------------------------------------------
 318:			; -- I/O --
 319:	0020          	MMUPORT		EQU	20H
 320:	0021          	MENAPRT		EQU	21H
 321:			; -- Map --
 322:	00C0          	EEPAGE0		EQU	0C0H		; page 0 of eeprom
 323:	F000          	EEPSTA		EQU	0F000H		; eeprom location after MMU reset
 324:	00EF          	MMTPAPAG	EQU	(EEPSTA>>8)-1	; TPA top page (256 bytes pages)
 325:	00FF          	IMTPAG		EQU	0FFH		; eeprom page with image table
 326:	0400          	IMTSIZ		EQU	1024		; size
 327:	E00 8255 ports to output mode
 345:			;IDE control lines for use with IDEportC.
 346:	0001          	IDEA0LINE	EQU	01H		;direct from 8255 to IDE interface
 347:	0002          	IDEA1LINE	EQU	02H		;direct from 8255 to IDE interface
 348:	0004          	IDEA2LINE	EQU	04H		;direct from 8255 to IDE interface
 349:	0008          	IDECS0LINE	EQU	08H		;inverter between 8255 and IDE interface
 350:	0010          	IDECS1LINE	EQU	10H		;inverter between 8255 and IDE interface
 351:	0020          	IDEWRLINE	EQU	20H		;invert, block
 270:	006A          	BLIFASTLINE	EQU	6AH		; Blink, fast, line
 271:	0020          	CURSOROFF	EQU	20H		; Off
 272:	0000          	FIXBLOCK	EQU	00H		; Fixed, block
 273:	000A          	CURSORON	EQU	0AH		; On
 274:			
 275:			; ---------------------------------------------------------------------
 276:			; LX390 FDC CONTROLLER:
 277:			; ---------------------------------------------------------------------
 278:	00D0          	FDCBASE		EQU	0D0H
 279:	00D0          	FDCCMDSTATR	EQU	FDCBASE		; Command aCNTRP		EQU	02H		; Control port
 299:	0000          	PPSTROB		EQU	0		; Strobe bit
 300:	0001          	PPAKSTB		EQU	1		; Acknowledge/Stop bit
 301:			;
 302:	0000          	PPDINI		EQU	00H		; 00000000 Dnl Init byte
 303:	0004          	PPDRDY		EQU	04H		; 00000100 Dnl Ready
 304:	0006          	PPDSTP		EQU	06H		; 00000110 Dnl Stop
 305:	0002          	PPDOKG		EQU	02H		; 00000010 Dnl Ok Go
 306:	0001          	PPUINI		EQU	01H		; 00000001 Upl Init byte
 307:	0005          	PPURDY		EQU	05H		; 00000101 Upl Ready
0          	RAMTBL		EQU	0E000H		; ram table location
 328:	0030          	TBLBLK		EQU	48		; block size
 329:	0014          	MAXBLK		EQU	20		; max images
 330:	03C0          	RTBSIZ		EQU	TBLBLK * MAXBLK	; real table size
 331:								; A table block is:
 332:	0008          	TNAMELEN	EQU	8		;	name		: 8 bytes
 333:	0002          	TPAGELEN	EQU	2		;	page offset	: 2 bytes
 334:	0004          	TIADDRLEN	EQU	4		;	image address	: 4 bytes
 335:	0004          	TSIZELEN	EQU	4		;	image size	: 4 bytes
 336:	0014         ter between 8255 and IDE interface
 352:	0040          	IDERDLINE	EQU	40H		;inverter between 8255 and IDE interface
 353:	0080          	IDERSTLINE	EQU	80H		;inverter between 8255 and IDE interface
 354:			;Symbolic constants for the IDE Drive registers
 355:	0008          	REGDATA		EQU	IDECS0LINE
 356:	0009          	REGERR		EQU	IDECS0LINE + IDEA0LINE
 357:	000A          	REGSECCNT	EQU	IDECS0LINE + IDEA1LINE
 358:	000B          	REGSECTOR	EQU	IDECS0LINE + IDEA1LINE + IDEA0LINE
 359:	000C          	REGCYLLSnd status register
 280:	00D1          	FDCTRAKREG	EQU	FDCBASE+1	; Track register
 281:	00D2          	FDCSECTREG	EQU	FDCBASE+2	; Sector register
 282:	00D7          	FDCDATAREG	EQU	FDCBASE+7	; Data register *** Verificare che sia $d7
 283:	00D6          	FDCDRVRCNT	EQU	FDCBASE+6	; Driver select/control register
 284:			;
 285:	0007          	FDCRESTC	EQU	00000111b	; 1771 restore (seek to trak 0) cmd
 286:	0017          	FDCSEEKC	EQU	00010111b	; seek cmd
 287:	0088          	FDCREADC	EQU	10001000b	; read cm 308:	0007          	PPUACK		EQU	07H		; 00000111 Upl Acknowledge
 309:	0003          	PPUOKG		EQU	03H		; 00000011 Upl Ok Go
 310:			;
 311:			; virtual disks (PC-linked over parallel port)
 312:	0000          	VDRDSEC		EQU	0		; read sector command
 313:	0001          	VDWRSEC		EQU	1		; write sector command
 314:	000A          	VDBUFSZ		EQU	10		; 10 bytes block
 315:			; ---------------------------------------------------------------------
 316:			; MULTF-BOARD: MMU, IDE, SERIAL, CTC
 317:			; -------------- 	TDESCLEN	EQU	20		;	description	: 20 bytes
 337:			; -- IDE --
 338:	00E0          	IDEPORTA	EQU	0E0H		;lower 8 bits of IDE interface
 339:	00E1          	IDEPORTB	EQU	0E1H		;upper 8 bits of IDE interface
 340:	00E2          	IDEPORTC	EQU	0E2H		;control lines for IDE interface
 341:	00E3          	IDEPORTCTRL	EQU	0E3H		;8255 configuration port
 342:			
 343:	0092          	READCFG8255	EQU	10010010b	;Set 8255 IDEportC to output, IDEportA/B input
 344:	0080          	WRITECFG8255	EQU	10000000b	;Set all threeB	EQU	IDECS0LINE + IDEA2LINE
 360:	000D          	REGCYLMSB	EQU	IDECS0LINE + IDEA2LINE + IDEA0LINE
 361:	000E          	REGSHD		EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE		;(0EH)
 362:	000F          	REGCOMMAND	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE	;(0FH)
 363:	000F          	REGSTATUS	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE
 364:	0016          	REGCONTROL	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 365:	0016          	REGASTATUS	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
 366:			;IDE Command Cow)   FCR - FIFO Control Register
 385:	0003          	R3LCR		EQU	3		; (r/w) LCR - Line Control Register
 386:	0004          	R4MCR		EQU	4		; (r/w) MCR - Modem Control Register
 387:	0005          	R5LSR		EQU	5		; (r)   LSR - Line Status Register
 388:	0006          	R6MSR		EQU	6		; (r)   MSR - Modem Status Register
 389:	0007          	R7SPR		EQU	7		; (r/w) SPR - Scratch Pad Register
 390:				; speeds:
 391:	0060          	UART1200	EQU	96		; = 1,843,200 / ( 16 x 1200 )
 392:	0030          	UART2400	EQU	48		 Hz
 409:	0005          	CTC1TC100HZ	EQU	5		; lo speed chan. 1 tc: 488.28 Hz / 5 = ~ 97.6 Hz
 410:	000A          	CTC1TC50HZ	EQU	10		; lo speed chan. 1 tc: 488.28 Hz / 10 = ~ 48.8 Hz
 411:	0013          	CTC1TC25HZ	EQU	19		; lo speed chan. 1 tc: 488.28 Hz / 19 = ~ 25 Hz
 412:	0030          	CTC1TC10HZ	EQU	48		; lo speed chan. 1 tc: 488.28 Hz / 48 = ~ 10 Hz
 413:	00F4          	CTC1TC2HZ	EQU	244		; lo speed chan. 1 tc: 488.28 Hz / 244 = ~ 2 Hz
 414:	0013          	SYSHERTZ	EQU	CTC1TC25HZ	; System timer hertzeed to have Fh * on top address lines * because this address
 438:			; is the index to MMU page.
 439:			;
 440:			; So:
 441:			;
 442:			; 	LD	A,00h		<--- phis. page number	00xxxh (4k page)
 443:			; 	LD	B,F0h		<--- log. page number 	 Fxxxh (cpu page)
 444:			; 	LD	C,20h		<--- MMU I/O address
 445:			; 	OUT	(C),A
 446:			; 	RET
 447:			;
 448:			; The OUT instruction place:
 449:			; A on data lines D0-D7
 450:			; Fh (from B register) on A12-A15
 451:			; on port 20h (C register)
 452:			;
 453:			;
 454nstants.
 367:	0010          	CMDRECAL	EQU	010H
 368:	0020          	CMDREAD		EQU	020H
 369:	0030          	CMDWRITE	EQU	030H
 370:	0091          	CMDINIT		EQU	091H
 371:	00EC          	CMDID		EQU	0ECH
 372:	00E0          	CMDSPINDOWN	EQU	0E0H
 373:	00E1          	CMDSPINUP	EQU	0E1H
 374:			; -- 16C550 UARTS --
 375:	00C0          	UART0BASE	EQU	0C0H		; Port base address for 0
 376:	00C8          	UART1BASE	EQU	0C8H		; Port base address for 1
 377:	00C0          	UART0		EQU	UART0BASE	; Select UART 0
 378:	0; = 1,843,200 / ( 16 x 2400 )
 393:	0018          	UART4800	EQU	24		; = 1,843,200 / ( 16 x 4800 )
 394:	000C          	UART9600	EQU	12		; = 1,843,200 / ( 16 x 9600 )
 395:	0006          	UART19K2	EQU	06		; = 1,843,200 / ( 16 x 19,200 )
 396:	0003          	UART38K4	EQU	03		; = 1,843,200 / ( 16 x 38,400 )
 397:	0002          	UART57K6	EQU	02		; = 1,843,200 / ( 16 x 57,600 )
 398:	0001          	UART115K2	EQU	01		; = 1,843,200 / ( 16 x 115,200 )
 399:			
 400:	0006          	U0DEFSPEED	EQU	UART19K2	; UART 0 d
 415:			; -- EEPROM --
 416:	0001          	EEP29EE		EQU	01H		; type 29EE020
 417:	0002          	EEP29XE		EQU	02H		; type 29LE020 or 29VE020
 418:	0004          	EEP29C		EQU	04H		; type 29C020
 419:	0008          	EEPUNSUPP	EQU	08H		; unsupported
 420:	0010          	EEPROGLOCK	EQU	10H		; programming locked
 421:				;
 422:	0080          	EERINEPROM	EQU	80H		; tried to program eeprom running inside it
 423:			
 424:			;
 425:			; MMU organization
 426:			;
 427:			; MMU manage 16 4kb pages in Z80 address :			; Memory is organized as follow:
 455:			;
 456:			;	Slot 1	-> RAM	  -> 512k from 00000h to 7ffffh (mandatory)
 457:			;	Slot 2	-> RAM	  -> 128k from 80000h to 9ffffh (option 1)
 458:			;	Slot 2	-> RAM    -> 256k from 80000h to bffffh (option 2)
 459:			;	Slot 3	-> EEPROM -> 256k from c0000h to fffffh (mandatory)
 460:			;
 461:			
 462:			
 463:			;-------------------------------------
 464:			; Production / Testing
 465:			
 466:	0000          	BBDEBUG	EQU	FALSE
 467:			
 468:			
 469:			;------------0C8          	UART1		EQU	UART1BASE	; Select UART 1
 379:	0000          	R0RXTX		EQU	0		; (r/w) RXD/TXD Transmit/Receive Buffer
 380:	0000          	R0BRDL		EQU	0		; (r/w) DLL  if bit 7 of LCR is set: Baud Rate Divisor LSB
 381:	0001          	R1IER		EQU	1		; (r/w) IER - Interrupt Enable Register
 382:	0001          	R1BRDM		EQU	1		; (r/w) DLM if bit 7 of LCR is set: Baud Rate Divisor MSB
 383:	0002          	R2IIR		EQU	2		; (r)   IIR - Interrupt Identification Register
 384:	0002          	R2FCR		EQU	2		; (efault speed
 401:	000C          	U1DEFSPEED	EQU	UART9600	; UART 1 default speed
 402:			; -- Z80CTC --
 403:	00E8          	CTCBASE		EQU	0E8H
 404:	00E8          	CTCCHAN0	EQU	CTCBASE+0	; Channel 1 - Free
 405:	00E9          	CTCCHAN1	EQU	CTCBASE+1	; Channel 2 - System Timer
 406:	00EA          	CTCCHAN2	EQU	CTCBASE+2	; Channel 3 - UART 1 Interrupt
 407:	00EB          	CTCCHAN3	EQU	CTCBASE+3	; Channel 4 - UART 0 Interrupt
 408:	0020          	CTC0TCHI	EQU	32		; hi speed chan. 0 tc: 4Mhz / 256 / 32 = 488.28space (logical)
 428:			; It can assign any of 256 4k pages (physical) from its
 429:			; 1Mb address space.
 430:			;
 431:			; To load phisycal page XXh to logical page (in CPU address space) Y,
 432:			; you should consider that MMU is at a fixed address 20h and that
 433:			; logical 4K page Y is derived in the MMU by the usage of A12,A13,A14
 434:			; and A15 address lines during an I/O instruction.
 435:			;
 436:			; So to address phys. ram page 00h at the top of logical space page Fh
 437:			; you n-------------------------
 470:			; Segments, pages locations
 471:			
 472:	0000          	IF	BBDEBUG
 478:			ELSE
 479:			
 480:	00C0          	BBIMGP	EQU	EEPAGE0		; Image location
 481:	000E          	BBAPPP	EQU	0EH
 482:	000F          	BBPAG	EQU	0FH		; Base page location
 483:			
 484:			ENDIF
 485:			
 486:	000D          	TRNPAG	EQU	0DH		; Page used for transient MMU ops
 487:	F000          	BBBASE	EQU	BBPAG << 12	; non resident base address
 488:	FC00          	BBCOMN	EQU	BBBASE + 0C00H	; resident por3:			
 524:	0134  0000    	CSPTR:	DEFW	0
 525:	0136  0000    	CSLEN:	DEFW	0
 526:			
 527:			;
 528:			;=======================================================================
 529:			;
 530:			; Modular Z80 DarkStar (NE Z80) Monitor
 531:			;
 532:			;=======================================================================
 533:			;
 534:			; CP/M 2 or 3 BIOS support utilities
 535:			; ---------------------------------------------------------------------
 536:			
 537:			
 538:				;       character and dis      		DEFB	$04			; drive 3
 567:	0155  08      		DEFB	$08 			; drive 4
 568:			
 569:			;;
 570:			;; CPMBOOT - boostrap cp/m
 571:			;
 572:	0156          	CPMBOOT:
 573:	0156  110002  		LD	DE,512
 574:	0159  CD2C01  		CALL	SETDPRM
 575:	015C  010000  		LD	BC,$00
 576:	015F  CD8201  		CALL	TRKSET
 577:	0162  3A0400  		LD	A,(CDISK)		; get logged drive
 578:	0165  4F      		LD	C,A
 579:	0166  CD9101  		CALL	DSKSEL
 580:	0169  CD3801  		CALL	FDRVSEL
 581:	016C  CDC401  		CALL	FHOME
 582:	016F  010030  		LD	----------------------------------------------------------
 619:			
 620:			;;
 621:			;; FDC delay
 622:			;
 623:	0196          	FDCDLY:
 624:	0196  E3      		EX	(SP),HL
 625:	0197  E3      		EX	(SP),HL
 626:	0198  E3      		EX	(SP),HL
 627:	0199  E3      		EX	(SP),HL
 628:	019A  C9      		RET
 629:			
 630:			;;
 631:			;; waitfd - get 1771 status and copy on buffer
 632:			;
 633:	019B          	WAITFD:
 634:				; wait until fdd busy is reset
 635:	019B  CD9601  		CALL	FDCDLY			; wait aproax 56 micros
 tion address
 489:			
 490:	F000          	SYSBASE EQU	BBBASE		; use this to have 60K TPA
 491:			; SYSBASE EQU	BBCOMN		; use this to have 63K TPA
 492:			
 493:			;-------------------------------------
 494:			
 495:	0100          		org	$100
 496:			
 497:	0100          	start:
 498:	0100  110002  		ld	de,512
 499:	0103  CD2C01  		call	setdprm
 500:	0106  010000  		ld	bc,$00
 501:	0109  CD8201  		call	trkset
 502:	010C  0E01    		ld	c,1			; drive B
 503:	010E  CD9101  		call	dsksel
 504:	0111  CD3801  		cak i/o handlers for cp/m BIOS
 539:				;	This are moved here from BIOS since we need to keep
 540:				;	space...
 541:			;;
 542:			;; FDRVSEL - select drive for r/w ops
 543:			;
 544:	0138          	FDRVSEL:
 545:	0138  F5      		PUSH	AF			;
 546:	0139  E5      		PUSH	HL			;
 547:	013A  215201  		LD	HL,HDRVV		; 10
 548:	013D  3A4500  		LD	A,(FDRVBUF)		; 13
 549:	0140  85      		ADD	A,L			; 4
 550:	0141  6F      		LD	L,A			; 4
 551:	0142  7E      		LD	A,(HL)			; 7
 552:	0143  67      		LD	H,A			;
 553:	0144BC,BLDOFFS		; read in loader
 583:	0172  CD8C01  		CALL	DMASET
 584:	0175  010100  		LD	BC,$01
 585:	0178  CD8701  		CALL	SECSET
 586:	017B  CD0802  		CALL	FREAD
 587:	017E  C0      		RET	NZ
 588:	017F  C30230  		JP	BLDOFFS+2		; jump to the loader if all ok
 589:			
 590:			
 591:			;;
 592:			
 593:			
 594:	0182          	TRKSET:
 595:	0182  ED434600		LD	(FTRKBUF),BC
 596:	0186  C9      		RET
 597:	0187          	SECSET:
 598:	0187  ED434300		LD	(FSECBUF),BC
 599:	018B  C9      		RET
 600:	018C          	636:	019E  0605    		LD	B,5			; set soft timer
 637:	01A0          	FWAIT00:
 638:	01A0  110000  		LD	DE,0			; for ~ five seconds
 639:	01A3          	FWAIT01:
 640:	01A3  DBD0    		IN	A,(FDCCMDSTATR)		; input to fdd status
 641:	01A5  CB47    		BIT	0,A			; test busy bit
 642:	01A7  2811    		JR	Z,FWAIT02		; jump if no command is in progress
 643:	01A9  1B      		DEC	DE			;
 644:	01AA  7A      		LD	A,D			; timer down
 645:	01AB  B3      		OR	E			;
 646:	01AC  20F5    		JR	NZ,FWAIT01		;
 647:	01AE  05      	ll	fdrvsel
 505:	0114  CDC401  		call	fhome
 506:			; 	ret	nz
 507:	0117  010030  		ld	bc,bldoffs		; read in loader
 508:	011A  CD8C01  		call	dmaset
 509:	011D  010100  		ld	bc,$01
 510:	0120  CD8701  		call	secset
 511:	0123  CD0802  		call	fread
 512:			
 513:	0126  00      		nop
 514:	0127  00      		nop
 515:	0128  00      		nop
 516:			
 517:	0129  C30000  		jp	0
 518:			
 519:	012C          	SETDPRM:
 520:	012C  223401  		LD	(CSPTR),HL
 521:	012F  ED533601		LD	(CSLEN),DE
 522:	0133  C9      		RET
 52  3A4E00  		LD	A, (DSELBF)
 554:	0147  E6F0    		AND	$F0
 555:	0149  B4      		OR	H
 556:	014A  324E00  		LD	(DSELBF),A		; 13
 557:	014D  D3D6    		OUT	(FDCDRVRCNT),A		; 11
 558:	014F  E1      		POP	HL			;
 559:	0150  F1      		POP	AF			;
 560:	0151  C9      		RET				;
 561:				;
 562:				; This used to translate the drive number in a cmd byte suitable
 563:				; for drive selection on the floppy board
 564:	0152  01      	HDRVV:	DEFB	$01			; drive 1
 565:	0153  02      		DEFB	$02			; drive 2
 566:	0154  04DMASET:
 601:	018C  ED434100		LD	(FRDPBUF),BC
 602:	0190  C9      		RET
 603:	0191          	DSKSEL:
 604:	0191  79      		LD	A,C
 605:	0192  324500  		LD	(FDRVBUF),A
 606:	0195  C9      		RET
 607:			
 608:			
 609:			
 610:			;
 611:			;=======================================================================
 612:			;
 613:			; Modular Z80 DarkStar (NE Z80) Monitor
 614:			;
 615:			;=======================================================================
 616:			;
 617:			; Floppy I/O
 618:			; -----------	DEC	B			;
 648:	01AF  20EF    		JR	NZ,FWAIT00		; time out
 649:	01B1          	FTIMEOUT:
 650:	01B1  3ED0    		LD	A,FDCRESET		; reset fdd controller
 651:	01B3  D3D0    		OUT	(FDCCMDSTATR),A		; exec. command
 652:	01B5  AF      		XOR	A
 653:	01B6  D3D6    		OUT	(FDCDRVRCNT),A
 654:	01B8  3C      		INC	A			; set time-out bit error
 655:	01B9  C9      		RET				; and ret
 656:	01BA          	FWAIT02:
 657:			; 	XOR	A
 658:	01BA  C9      		RET				; normal return
 659:			;
 660:	01BB          	GCURTRK:
 661:	011DB  D5      		PUSH	DE
 691:	01DC  0603    		LD	B,3			; retrys number
 692:	01DE  CDBB01  		CALL	GCURTRK
 693:	01E1  7E      		LD	A,(HL)
 694:	01E2  D3D1    		OUT	(FDCTRAKREG),A
 695:	01E4  3A4300  	FRETR1:	LD	A,(FSECBUF)
 696:	01E7  D3D2    		OUT	(FDCSECTREG),A
 697:	01E9  3A4600  		LD	A,(FTRKBUF)
 698:	01EC  D3D7    		OUT	(FDCDATAREG),A
 699:	01EE  3E17    		LD	A,FDCSEEKC		; seek cmd
 700:	01F0  D3D0    		OUT	(FDCCMDSTATR),A		; exec. command
 701:	01F2  48      		LD	C,B			; save retry count
 702:	01F3  CDR	NZ,FSHTM
 736:	0221  060A    		LD	B,$0A			; 10 retries
 737:	0223  F3      	FRWNXT:	DI				; not interruptible
 738:	0224  2A4100  		LD	HL,(FRDPBUF)
 739:	0227  DD5E02  		LD	E,(IX+2)		; need to know buffer size on write
 740:	022A  DD5603  		LD	D,(IX+3)
 741:	022D  3A4C00  		LD	A,(MIOBYTE)
 742:	0230  CB47    		BIT	0,A
 743:	0232  2818    		JR	Z,FRWWRO
 744:	0234  3E88    		LD	A,FDCREADC		; read command
 745:	0236  D3D0    		OUT	(FDCCMDSTATR),A		; exec. command
 746:	0238  CD9601  		CALL	FDCDLY
 747:	023B    		LD	C,B			; save retry count
 775:	0269  CD9B01  		CALL	WAITFD
 776:	026C  41      		LD	B,C			; restore retry count
 777:	026D  E65C    		AND	01011100b		; mask wrt-prtc,rnf,crc,lst-dat error
 778:	026F  2815    		JR	Z,FSHTM
 779:	0271  10B0    		DJNZ	FRWNXT
 780:	0273  3A4B00  		LD	A,(TMPBYTE)
 781:	0276  CB77    		BIT	6,A
 782:	0278  200C    		JR	NZ,FSHTM
 783:	027A  CBF7    		SET	6,A
 784:	027C  324B00  		LD	(TMPBYTE),A
 785:	027F  CDC401  		CALL	FHOME
 786:	0282  2002    		JR	NZ,FSHTM
 787:	0284  189BB  213F00  		LD	HL,FSEKBUF
 662:	01BE  3A4500  		LD	A,(FDRVBUF)
 663:	01C1  85      		ADD	A,L
 664:	01C2  6F      		LD	L,A
 665:	01C3  C9      		RET
 666:			;;
 667:			;; FHOME - move head to trak 0 (cp/m home like)
 668:			;;
 669:	01C4          	FHOME:
 670:	01C4  C5      		PUSH	BC			; save register
 671:	01C5  D5      		PUSH	DE
 672:	01C6  3E07    		LD	A,FDCRESTC		; fdd restore command
 673:	01C8  D3D0    		OUT	(FDCCMDSTATR),A		; exec. command
 674:	01CA  CD9B01  		CALL	WAITFD			; wait until end command9B01  		CALL	WAITFD
 703:	01F6  41      		LD	B,C			; restore retry count
 704:	01F7  E619    		AND	00011001b
 705:	01F9  2807    		JR	Z,FSKEND
 706:	01FB  CDC401  		CALL	FHOME
 707:	01FE  2002    		JR	NZ,FSKEND
 708:	0200  10E2    		DJNZ	FRETR1
 709:	0202  DBD1    	FSKEND:	IN	A,(FDCTRAKREG)
 710:	0204  77      		LD	(HL),A
 711:	0205  D1      	FTERR:	POP	DE
 712:	0206  C1      		POP	BC
 713:	0207  C9      		RET
 714:			;;
 715:			;; FREAD - read a sector
 716:			;
 717:	0208          	FREAD:
 718:	0208  3A4C 1803    		JR	FRRDY
 748:	023D  0F      	FRBSY:	RRCA
 749:	023E  3027    		JR	NC,FWEND
 750:	0240  DBD0    	FRRDY:	IN	A,(FDCCMDSTATR)
 751:	0242  CB4F    		BIT	1,A			; sec found
 752:	0244  28F7    		JR	Z,FRBSY
 753:	0246  DBD7    		IN	A,(FDCDATAREG)
 754:	0248  77      		LD	(HL),A
 755:	0249  23      		INC	HL
 756:	024A  18F4    		JR	FRRDY
 757:	024C  3EA8    	FRWWRO:	LD	A,FDCWRITC
 758:	024E  D3D0    		OUT	(FDCCMDSTATR),A		; exec. command
 759:	0250  CD9601  		CALL	FDCDLY
 760:	0253  1803    		JR	FWRDY
 76    		JR	FRWLP
 788:	0286          	FSHTM:
 789:	0286  F5      		PUSH	AF
 790:	0287  AF      		XOR	A
 791:	0288  D3D6    		OUT	(FDCDRVRCNT),A
 792:	028A  F1      		POP	AF
 793:	028B  D1      		POP	DE
 794:	028C  C9      		RET
 795:			
 796:			;;
 797:			;; SIDSET - set current side bit on DSELBF
 798:			;;          selected side on C
 799:			;;
 800:	028D  214E00  	SIDSET:	LD	HL,DSELBF		; loads drive interf. buffer
 801:	0290  79      		LD	A,C			; which side ?
 802:	0291  FE00    		CP	0			;
 803:	0293  200
 675:	01CD  4F      		LD	C,A			; save status
 676:	01CE  CDBB01  		CALL	GCURTRK			; proceed
 677:	01D1  DBD1    		IN	A,(FDCTRAKREG)
 678:	01D3  77      		LD	(HL),A
 679:	01D4  79      		LD	A,C			; restore status
 680:	01D5  E619    		AND	00011001b		; set Z flag
 681:	01D7  D1      		POP	DE
 682:	01D8  C1      		POP	BC			; restore register
 683:	01D9  C9      		RET
 684:			
 685:			;;
 686:			;; FSEEK - seek to specific track/sector
 687:			;
 688:	01DA          	FSEEK:
 689:	01DA  C5      		PUSH	BC
 690:	000  		LD	A,(MIOBYTE)
 719:	020B  CBC7    		SET	0,A
 720:	020D  1805    		JR	FLOPIO
 721:			;;
 722:			;; FWRITE - write a sector
 723:			;
 724:	020F          	FWRITE:
 725:	020F  3A4C00  		LD	A,(MIOBYTE)
 726:	0212  CB87    		RES	0,A
 727:			;;
 728:			;; FLOPIO - read or write a sector depending on MIOBYTE
 729:			;
 730:	0214          	FLOPIO:
 731:	0214  D5      		PUSH	DE
 732:	0215  DD213401		LD	IX,CSPTR
 733:	0219  324C00  		LD	(MIOBYTE),A
 734:	021C  CDDA01  	FRWLP:	CALL	FSEEK
 735:	021F  2065    		J61:	0255  0F      	FRWBSY:	RRCA
 762:	0256  300F    		JR	NC,FWEND
 763:	0258  DBD0    	FWRDY:	IN	A,(FDCCMDSTATR)
 764:	025A  CB4F    		BIT	1,A
 765:	025C  28F7    		JR	Z,FRWBSY
 766:	025E  7E      		LD	A,(HL)
 767:	025F  D3D7    		OUT	(FDCDATAREG),A
 768:	0261  23      		INC	HL
 769:	0262  1B      		DEC	DE		; 6 c.
 770:	0263  7A      		LD	A,D		; 4 c.
 771:	0264  B3      		OR	E		; 4 c.
 772:	0265  20F1    		JR	NZ,FWRDY	; 7/12 c.
 773:	0267  FB      	FWEND:	EI				; end of critical operations
 774:	0268  48   3    		JR	NZ,SIDONE		; side 1
 804:	0295  CBAE    		RES	5,(HL)			; side 0
 805:	0297  C9      		RET				;
 806:	0298  CBEE    	SIDONE:	SET	5,(HL)			;
 807:	029A  C9      		RET
 808:			



Statistics:

     5	passes
     0	jr promotions
   256	symbols
     0	bytes



Symbol Table:

altprnprt      =   3+    false          =   0+    ppdini         =   0+    
appbuf         =  2d+    fdcbase        =  d0+    ppdokg         =   2+    
bbappp         =   e+    fdccmdstatr    =  d0+    ppdrdy         =   4+    
bbb   1c4     r2iir          =   2+    
clkio          =   6+    fifblok        =   b+    r3lcr          =   3+    
clkrst         =   7+    fifoend        =  25+    r4mcr          =   4+    
clksclk        =   5+    fifokb         =  1a+    r5lsr          =   5+    
cmdid          =  ec+    fifosto        =   f+    r6msr          =   6+    
cmdinit        =  91+    fifou0         =   f+    r7spr          =   7+    
cmdread        =  20+    fifsize        =   8+    ram0buf        =  3b+    
cmdrecal       =  1ctor      =   b+    
crthilitbit    =   3+    fshtm            286     regshd         =   e+    
crtkeybcnt     =  87+    fskend           202     regstatus      =   f+    
crtkeybdat     =  85+    fterr            205+    rsrvbuf        =  2f+    
crtmodebit     =   4+    ftimeout         1b1+    rst7sp1        =  38+    
crtprntcnt     =  83+    ftrkbuf        =  46+    rst7sp2        =  39+    
crtprntdat     =  81+    fwait00          1a0     rst7sp3        =  3a+    
crtram0cnt     =  82+    fwait01       
ctc0tc         =  29+    ideportb       =  e1+    tpa            = 100+    
ctc0tchi       =  20+    ideportc       =  e2+    tpagelen       =   2+    
ctc1tc         =  28+    ideportctrl    =  e3+    trkset           182     
ctc1tc100hz    =   5+    iderdline      =  40+    trnpag         =   d+    
ctc1tc10hz     =  30+    iderstline     =  80+    true           =ffff+    
ctc1tc25hz     =  13+    idewrline      =  20+    tsizelen       =   4+    
ctc1tc2hz      =  f4+    imtpag         =  ff+    uase         =f000+    fdcdatareg     =  d7+    ppdstp         =   6+    
bbcbank        =   c+    fdcdly           196     ppstrob        =   0+    
bbcomn         =fc00+    fdcdrvrcnt     =  d6+    ppuack         =   7+    
bbcstck        =   d+    fdcreadc       =  88+    ppuini         =   1+    
bbdebug        =   0+    fdcreset       =  d0+    ppuokg         =   3+    
bbimgp         =  c0+    fdcrestc       =   7+    ppurdy         =   5+    
bbpag          =   f+    fdcsectreg     =  d2+    prntbusyb0+    fixblock       =   0+    ram1buf        =  3c+    
cmdspindown    =  e0+    flopio           214     ram2buf        =  3d+    
cmdspinup      =  e1+    frbsy            23d     ram3buf        =  3e+    
cmdwrite       =  30+    frdpbuf        =  41+    ramtbl         =e000+    
cnfbyte        =  26+    fread            208     readcfg8255    =  92+    
colbuf         =  4f+    fretr1           1e4     regastatus     =  16+    
copsys         =  2c+    frrdy            240     regcommand     =   f+           1a3     rtbsiz         = 3c0+    
crtram0dat     =  80+    fwait02          1ba     secset           187     
crtram1cnt     =  86+    fwend            267     setdprm          12c     
crtram1dat     =  84+    fwrdy            258     sidone           298     
crtram2cnt     =  8a+    fwrite           20f+    sidset           28d+    
crtram2dat     =  88+    gcurtrk          1bb     start            100+    
crtram3port    =  8e+    hdrvv            152     sysbase        =f000+    
crtrevrsbit    0defspeed     =   6+    
ctc1tc50hz     =   a+    imtsiz         = 400+    u1defspeed     =   c+    
ctcbase        =  e8+    iobyte         =   3+    uart0          =  c0+    
ctcchan0       =  e8+    kbdbyte        =  4d+    uart0base      =  c0+    
ctcchan1       =  e9+    keybstrbbit    =   7+    uart0br        =  2b+    
ctcchan2       =  ea+    lf             =   a+    uart1          =  c8+    
ctcchan3       =  eb+    maxblk         =  14+    uart115k2      =   1+    
curpbuf        =  48+    menaprit    =   0+    
bldoffs        =3000+    fdcseekc       =  17+    prvtop         =  4f+    
blifastblok    =  60+    fdctrakreg     =  d1+    r0brdl         =   0+    
blifastline    =  6a+    fdcwritc       =  a8+    r0rxtx         =   0+    
blislowblok    =  40+    fdrvbuf        =  45+    r1brdm         =   1+    
blislowline    =  4a+    fdrvsel          138     r1ier          =   1+    
btpasiz        =   6+    ff             =   c+    r2fcr          =   2+    
cdisk          =   4+    fhome         
cpmboot          156+    frwbsy           255     regcontrol     =  16+    
cr             =   d+    frwlp            21c     regcyllsb      =   c+    
crt6545adst    =  8c+    frwnxt           223     regcylmsb      =   d+    
crt6545data    =  8d+    frwwro           24c     regdata        =   8+    
crtbase        =  80+    fsecbuf        =  43+    regerr         =   9+    
crtbeepport    =  8f+    fseek            1da     regseccnt      =   a+    
crtblinkbit    =   0+    fsekbuf        =  3f+    regse=   1+    hmempag        =   b+    syshertz       =  13+    
crtservcnt     =  8b+    idea0line      =   1+    tblblk         =  30+    
crtservdat     =  89+    idea1line      =   2+    tdesclen       =  14+    
crtunderbit    =   2+    idea2line      =   4+    tiaddrlen      =   4+    
crtwidthbit    =   1+    idecs0line     =   8+    timrcon        =  27+    
cslen            136     idecs1line     =  10+    tmpbyte        =  4b+    
csptr            134     ideporta       =  e0+    tnamelen       =   8+t        =  21+    uart1200       =  60+    
cursoroff      =  20+    miobyte        =  4c+    uart19k2       =   6+    
cursoron       =   a+    mmtpapag       =  ef+    uart1base      =  c8+    
cursshp        =  4a+    mmuport        =  20+    uart1br        =  2a+    
dmaset           18c     mmutstaddr     =d000+    uart2400       =  30+    
dselbf         =  4e+    mmutstpage     =   d+    uart38k4       =   3+    
dsksel           191     monmaj         =  33+    uart4800       =  18+    
eep29c                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     nitor/BIOS has been started.
;   Major goals:
;   o Modularization: Now monitor can grow up to 256kb instead of 4kb
;     :-)
;   o Specialized images fitted in memory page (4kb) or multiples
;   o Full support for new hardware
;   o I/O rewrite for MODE 2 interrupts
;   Minor goals:
;   o Full code clean-up & reoarganization
; ---------------------------------------------------------------------
; Revisions:
; 20140905 - Modified hexadecimal constants to 0xxH format to widely
;            accepeted by diffembled at ORG F000 and linked and allocated
; in the EEPROM in this way:
;
;	+-----------------+
;	+    SysCommon    +
;	+   FC00 - FFFF   +
;	+     SysBios     +     <-- EEPROM page 1 ($C1000)
;	+   F000 - FBFF   +
;	+-----------------+
;	+-----------------+
;	+    SysCommon    +
;	+   FC00 - FFFF   +
;	+   BootMonitor   +     <-- EEPROM page 0 ($C0000)
;	+   F000 - FBFF   +
;	+-----------------+
;
; ---------------------------------------------------------------------
;
; Define which assembler we are usi    =   4+    monmin         =  33+    uart57k6       =   2+    
eep29ee        =   1+    mscnt          =  f6+    uart9600       =   c+    
eep29xe        =   2+    mzmac          =   1+    vdbufsz        =   a+    
eepage0        =  c0+    pio2bit2       =   2+    vdrdsec        =   0+    
eeproglock     =  10+    pio2bit3       =   3+    vdwrsec        =   1+    
eepsta         =f000+    pio2bit4       =   4+    waitfd           19b     
eepunsupp      =   8+    ppakstb        =   1+    writecfg8255   =                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 erent assemblers
; ---------------------------------------------------------------------


; ---------------------------------------------------------------------
; SYSBIOS
;
; This is the BIOS non-resident portion of the new (banked)
; BIOS/Monitor for the NE Z80 (aka DarkStar)
;
; ---------------------------------------------------------------------
;
; Full BIOS memory scheme:
;
;	+-----------------+
;	+    SysCommon    +   <-- Resident portion. Common to all images
;	+   FC00 - FFFF   +
;	+-------------ng
;

; PASMO	EQU	1
MZMAC	EQU	1
; ZMAC	EQU	1			; ZMAC Z80 assembler, not Linux/Unix version

; ... only one at a time can be active (1) ...

;
; Monitor version numbers (major.minor)
;
MONMAJ		EQU	'3'
MONMIN		EQU	'3'

;
; Buffers addresses labels
;

; -- Global --
IOBYTE		EQU	0003H		; byte: Intel IOBYTE (CP/M 2.2 only)
CDISK		EQU	0004H		; byte: Last logged drive
BTPASIZ		EQU	0006H		; word: size of tpa + 1
;
; -- Private --
HMEMPAG		EQU	000BH		; byte: highest ram page
BBCBANK		EQU	000CH		; byte: current bank 80+    
eerineprom     =  80+    ppcntrp        =   2+    
esc            =  1b+    ppdatap        =   3+    
                                                                                                                                                                                                                                                                                                                                                                                                                 

;
;=======================================================================
;
; Modular Z80 DarkStar (NE Z80) SysBios
;
;=======================================================================
;
; Original code:
; Z80 Nuova Elettronica Monitor 390 su eprom 2532 (4k)
;
; Disassembled and reconstructed by
; Piergiorgio Betti <pbetti@lpconsul.net> on 2005 01 26
;
; Latest non modular BIOS is DARKSTAR-MONITOR-0.9.0.asm
; dated 20140531
; - Following addition of MultiF-Board doing complete rewrite of the
;   mo----+
;	+-----------------+   +-----------------+   +-----------------+
;	+     SysBios     +   +   BootMonitor   +   +     [Other]     +
;	+   F000 - FBFF   +   +   F000 - FBFF   +   +   F000 - FBFF   +
;	+-----------------+   +-----------------+   +-----------------+
;
;	         ^                     ^                     ^
;	         |                     |                     |
;	         ---------------------------------------------
;	                      Variable section
;
; The above are always ass
BBCSTCK		EQU	000DH		; word: current stack
		;
PRVTOP		EQU	004FH		; top of private area storage
COLBUF		EQU	PRVTOP		; byte:
DSELBF		EQU	COLBUF-1	; byte: floppy drive select status
					; - bits: 0 = drive 0
					; - bits: 1 = drive 1
					; - bits: 2 = drive 2
					; - bits: 3 = drive 3
					; - bits: 4 = unused
					; - bits: 5 = head select
					; - bits: 6 = motor on (disabled by jumper)
					; - bits: 7 = unused
KBDBYTE		EQU	DSELBF-1	; byte: store keyboard input
MIOBYTE		EQU	KBDBYTE-1	; byte:
					; - bUF		EQU	CURPBUF-2	; word: track # for i/o (0 - 65535)
FDRVBUF		EQU	FTRKBUF-1	; byte: drive number for i/0 (0 - 15)
FSECBUF		EQU	FDRVBUF-2	; word: sector # for i/o (1 .. 65535)
FRDPBUF		EQU	FSECBUF-2	; word: dma address for i/o
FSEKBUF		EQU	FRDPBUF-2	; word: current track number for drive A/B
RAM3BUF		EQU	FSEKBUF-1	; byte:
RAM2BUF		EQU	RAM3BUF-1	; byte:
RAM1BUF		EQU	RAM2BUF-1	; byte:
RAM0BUF		EQU	RAM1BUF-1	; byte:
RST7SP3		EQU	003AH		; keep clear area of RST38 (RST7)
RST7SP2		EQU	0039H
RST7SP1		EQU	0038H
RSRce for disk bootloader

;
; Some commodity equs
;
CR		EQU	0DH		; ascii CR & LF
LF		EQU	0AH
FF		EQU	0CH		; FORM FEED (clear screen)
ESC		EQU	1BH		; ESCape
TRUE		EQU	-1
FALSE		EQU	0
TPA		EQU	0100H		; TPA base address (for CP/M)

;
; Modules equs
;
	; delay
MSCNT		EQU	246
	; mmu
MMUTSTPAGE	EQU	0DH		; logical page used for sizing
MMUTSTADDR	EQU	MMUTSTPAGE<<12	; logical page used for sizing

; Conventionally all bios/monitor images start at $F000.
; Except for special cases all code is copied to ram @ $F000.
; Igister
					; STROBE is generated by hardware
	; RAM1 for graphics. (pixel index by RAM0+RAM1+RAM2)
CRTRAM1DAT	EQU	CRTBASE+4	; RAM1 access: PIO1 port A data register
CRTRAM1CNT	EQU	CRTBASE+6	; RAM1 access: PIO1 port A control register
	; Keyboard port (negated). Bit 7 is for strobe
CRTKEYBDAT	EQU	CRTBASE+5	; KEYBOARD (input): PIO1 port B data register
CRTKEYBCNT	EQU	CRTBASE+7	; KEYBOARD (input): PIO1 port B control register
KEYBSTRBBIT	EQU	7		; Strobe bit
	; RAM2 for graphics. (pixel index by RAM0+RAM1+RAM2its: 0: 0 = floppy write		1 = floppy read
					;         1: 0 = no ctrl on keypress	1 = ctrl on keypress
					;         2: 0 = scroll			1 = no scroll
					;         3: 0 = accept lowercase	1 = convert to uppercase
					;         4: 0 = destr. bkspace		1 = non destr. bkspace
					;         5: 0 = console out		1 = serial out
					;         6: 0 = disp. all chars	1 = obscure non punct.
					;         7: 0 = ctrl chr set 1		1 = ctrl chr set 2
TMPBYTE		EQU	MIOBYTE-1	; byte: transients flags
					; - bits: 0: 0 =VBUF		EQU	RST7SP1-9	; free 9 byte buffer
APPBUF		EQU	RSRVBUF-2	; word: generic buffer
COPSYS		EQU	APPBUF-1	; Op system type for partition selection
UART0BR		EQU	COPSYS-1	; UART 0 baudrate
UART1BR		EQU	UART0BR-1	; UART 1 baudrate
CTC0TC		EQU	UART1BR-1	; CTC channel 0 time constant
CTC1TC		EQU	CTC0TC-1	; CTC channel 1 time constant
TIMRCON		EQU	CTC1TC-1	; timer buf
CNFBYTE		EQU	TIMRCON-1	; config byte
					; - bits: 0: 0 = UART1 intr disabled	1 = RST8 redir UART1
					;         1: 0 = unused/reserved
					;  n this case eeprom page 0 is directly mapped into logical space
; by hardware so we can initialize the system at cold boot.
;
; We assume to initialize MMU as follow:
;
; +--------+
; |  F000  |	-> $C0000  eeprom page 0
; +--------+
; +--------+
; |  EFFF  |
; +--------+
;     ...       -> $00000 to $0EFFF ram
; +--------+
; |  0000  |
; +--------+
;


; include	modules/hwequs.inc.asm
; Hardware equates
; ---------------------------------------------------------------------

; ------------------------------)
CRTRAM2DAT	EQU	CRTBASE+8	; RAM2 access: PIO2 port A data register
CRTRAM2CNT	EQU	CRTBASE+10	; RAM2 access: PIO2 port A control register
	; Service/User port
CRTSERVDAT	EQU	CRTBASE+9	; Service (i/o): PIO2 port B data register
CRTSERVCNT	EQU	CRTBASE+11	; Service (i/o): PIO2 port B control register
PRNTBUSYBIT	EQU	0		; Printer BUSY bit		(in)	1
CRTWIDTHBIT	EQU	1		; Set 40/80 chars per line	(out)	0
PIO2BIT2	EQU	2		; user 1 (input)		(in)	1
PIO2BIT3	EQU	3		; user 2 (input)		(in)	1
PIO2BIT4	EQU	4		; user 3 (input high in cursor addressing
					;         1: 0 = ESC catched by ANSI driver
					;         2: 0 = CSI catched by ANSI driver
					;         3: 0 = Two byte code ESC seq. from serial
					;         4: 0 = Plain serial i/o (disable ANSI driver)
					;         5: 0 = store interrupt status (on/off)
					;         6: 0 = floppy home on err	1 = no home on err
					;         7: 0 = unlock LBA free addressing (unpartitioned)
CURSSHP		EQU	TMPBYTE-1	; cursor shape
CURPBUF		EQU	CURSSHP-2	; word: cursor position
FTRKB       2: 0 = unused/reserved
					;         3: 0 = unused/reserved
					;         4: 0 = unused/reserved
					;         5: 0 = unused/reserved
					;         6: 0 = unused/reserved
					;         7: 0 = unused/reserved
FIFOSTO		EQU	000FH		; fifo queues storage start
FIFSIZE		EQU	8		; fifo queue lenght
FIFBLOK		EQU	11		; fifo queue size
FIFOU0		EQU	FIFOSTO		; uart 0 queue (alternate console)
FIFOKB		EQU	FIFOU0+FIFBLOK	; keyboard queue
FIFOEND		EQU	FIFOKB+FIFBLOK	; fifo blocks end
;
BLDOFFS		EQU	3000H		; pla---------------------------------------
; LX529 VIDEO BOARD:
; ---------------------------------------------------------------------
CRTBASE		EQU	80H
	; RAM0 for ascii chars & semi6. Combined with RAM1 and RAM2 for graphics
CRTRAM0DAT	EQU	CRTBASE		; RAM0 access: PIO0 port A data register
CRTRAM0CNT	EQU	CRTBASE+2	; RAM0 access: PIO0 port A control register
	; Printer port
CRTPRNTDAT	EQU	CRTBASE+1	; PRINTER (output): PIO0 port B data register
CRTPRNTCNT	EQU	CRTBASE+3	; PRINTER (output): PIO0 port B control re)		(in)	1
CLKSCLK		EQU	5		; DS1320 clock line		(out)	0
CLKIO		EQU	6		; DS1320 I/O line		(i/o)	1
CLKRST		EQU	7		; DS1320 RST line		(out)	0
	; normal set for PIO2 (msb) 01011101 (lsb) that is hex $5D
					; Other bits available to user
	; RAM3 control chars/graphics attributes
CRTRAM3PORT	EQU	CRTBASE+14	; RAM3 port
CRTBLINKBIT	EQU	0		; Blink
CRTREVRSBIT	EQU	1		; Reverse
CRTUNDERBIT	EQU	2		; Underline
CRTHILITBIT	EQU	3		; Highlight
CRTMODEBIT	EQU	4		; ASCII/GRAPHIC mode
	; Beeper port
CRTBEEPPORT	EQU	CRTBASE+1DCRESET	EQU	11010000b	; fdc reset immediate cmd
; ---------------------------------------------------------------------
; LX389: PARALLEL INTERFACE
; ---------------------------------------------------------------------
; alternate printer port
ALTPRNPRT	EQU	03H
;
; parallel port PC link
PPDATAP		EQU	03H		; Data port
PPCNTRP		EQU	02H		; Control port
PPSTROB		EQU	0		; Strobe bit
PPAKSTB		EQU	1		; Acknowledge/Stop bit
;
PPDINI		EQU	00H		; 00000000 Dnl Init byte
PPDRDY		EQU	04H		; 00000100 Dnl Ready
PPDSTP		EQAMELEN	EQU	8		;	name		: 8 bytes
TPAGELEN	EQU	2		;	page offset	: 2 bytes
TIADDRLEN	EQU	4		;	image address	: 4 bytes
TSIZELEN	EQU	4		;	image size	: 4 bytes
TDESCLEN	EQU	20		;	description	: 20 bytes
; -- IDE --
IDEPORTA	EQU	0E0H		;lower 8 bits of IDE interface
IDEPORTB	EQU	0E1H		;upper 8 bits of IDE interface
IDEPORTC	EQU	0E2H		;control lines for IDE interface
IDEPORTCTRL	EQU	0E3H		;8255 configuration port

READCFG8255	EQU	10010010b	;Set 8255 IDEportC to output, IDEportA/B input
WRITECFG8255	EQU	10000000b	;SetDECS1LINE + IDEA2LINE + IDEA1LINE
REGASTATUS	EQU	IDECS1LINE + IDEA2LINE + IDEA1LINE
;IDE Command Constants.
CMDRECAL	EQU	010H
CMDREAD		EQU	020H
CMDWRITE	EQU	030H
CMDINIT		EQU	091H
CMDID		EQU	0ECH
CMDSPINDOWN	EQU	0E0H
CMDSPINUP	EQU	0E1H
; -- 16C550 UARTS --
UART0BASE	EQU	0C0H		; Port base address for 0
UART1BASE	EQU	0C8H		; Port base address for 1
UART0		EQU	UART0BASE	; Select UART 0
UART1		EQU	UART1BASE	; Select UART 1
R0RXTX		EQU	0		; (r/w) RXD/TXD Transmit/Receive Buffer
R0BRDL		EQU	0		; (r/w) DLL  if bit5	; Beeper port
	; 6545 CRT controller ports
CRT6545ADST	EQU	CRTBASE+12	; Address & Status register
CRT6545DATA	EQU	CRTBASE+13	; Data register
	; Cursor modes
BLISLOWBLOK	EQU	40H		; Blink, slow, block
BLISLOWLINE	EQU	4AH		; Blink, slow, line
BLIFASTBLOK	EQU	60H		; Blink, fast, block
BLIFASTLINE	EQU	6AH		; Blink, fast, line
CURSOROFF	EQU	20H		; Off
FIXBLOCK	EQU	00H		; Fixed, block
CURSORON	EQU	0AH		; On

; ---------------------------------------------------------------------
; LX390 FDC CONTROLLER:
; -------U	06H		; 00000110 Dnl Stop
PPDOKG		EQU	02H		; 00000010 Dnl Ok Go
PPUINI		EQU	01H		; 00000001 Upl Init byte
PPURDY		EQU	05H		; 00000101 Upl Ready
PPUACK		EQU	07H		; 00000111 Upl Acknowledge
PPUOKG		EQU	03H		; 00000011 Upl Ok Go
;
; virtual disks (PC-linked over parallel port)
VDRDSEC		EQU	0		; read sector command
VDWRSEC		EQU	1		; write sector command
VDBUFSZ		EQU	10		; 10 bytes block
; ---------------------------------------------------------------------
; MULTF-BOARD: MMU, IDE, SERIAL, CTC
; -------------- all three 8255 ports to output mode
;IDE control lines for use with IDEportC.
IDEA0LINE	EQU	01H		;direct from 8255 to IDE interface
IDEA1LINE	EQU	02H		;direct from 8255 to IDE interface
IDEA2LINE	EQU	04H		;direct from 8255 to IDE interface
IDECS0LINE	EQU	08H		;inverter between 8255 and IDE interface
IDECS1LINE	EQU	10H		;inverter between 8255 and IDE interface
IDEWRLINE	EQU	20H		;inverter between 8255 and IDE interface
IDERDLINE	EQU	40H		;inverter between 8255 and IDE interface
IDERSTLINE	EQU	80H		;inverter 7 of LCR is set: Baud Rate Divisor LSB
R1IER		EQU	1		; (r/w) IER - Interrupt Enable Register
R1BRDM		EQU	1		; (r/w) DLM if bit 7 of LCR is set: Baud Rate Divisor MSB
R2IIR		EQU	2		; (r)   IIR - Interrupt Identification Register
R2FCR		EQU	2		; (w)   FCR - FIFO Control Register
R3LCR		EQU	3		; (r/w) LCR - Line Control Register
R4MCR		EQU	4		; (r/w) MCR - Modem Control Register
R5LSR		EQU	5		; (r)   LSR - Line Status Register
R6MSR		EQU	6		; (r)   MSR - Modem Status Register
R7SPR		EQU	7		; (r/w) SPR - Scrat--------------------------------------------------------------
FDCBASE		EQU	0D0H
FDCCMDSTATR	EQU	FDCBASE		; Command and status register
FDCTRAKREG	EQU	FDCBASE+1	; Track register
FDCSECTREG	EQU	FDCBASE+2	; Sector register
FDCDATAREG	EQU	FDCBASE+7	; Data register *** Verificare che sia $d7
FDCDRVRCNT	EQU	FDCBASE+6	; Driver select/control register
;
FDCRESTC	EQU	00000111b	; 1771 restore (seek to trak 0) cmd
FDCSEEKC	EQU	00010111b	; seek cmd
FDCREADC	EQU	10001000b	; read cmd
FDCWRITC	EQU	10101000b	; write cmd
F-------------------------------------------------------
; -- I/O --
MMUPORT		EQU	20H
MENAPRT		EQU	21H
; -- Map --
EEPAGE0		EQU	0C0H		; page 0 of eeprom
EEPSTA		EQU	0F000H		; eeprom location after MMU reset
MMTPAPAG	EQU	(EEPSTA>>8)-1	; TPA top page (256 bytes pages)
IMTPAG		EQU	0FFH		; eeprom page with image table
IMTSIZ		EQU	1024		; size
RAMTBL		EQU	0E000H		; ram table location
TBLBLK		EQU	48		; block size
MAXBLK		EQU	20		; max images
RTBSIZ		EQU	TBLBLK * MAXBLK	; real table size
					; A table block is:
TN between 8255 and IDE interface
;Symbolic constants for the IDE Drive registers
REGDATA		EQU	IDECS0LINE
REGERR		EQU	IDECS0LINE + IDEA0LINE
REGSECCNT	EQU	IDECS0LINE + IDEA1LINE
REGSECTOR	EQU	IDECS0LINE + IDEA1LINE + IDEA0LINE
REGCYLLSB	EQU	IDECS0LINE + IDEA2LINE
REGCYLMSB	EQU	IDECS0LINE + IDEA2LINE + IDEA0LINE
REGSHD		EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE		;(0EH)
REGCOMMAND	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE	;(0FH)
REGSTATUS	EQU	IDECS0LINE + IDEA2LINE + IDEA1LINE + IDEA0LINE
REGCONTROL	EQU	Ich Pad Register
	; speeds:
UART1200	EQU	96		; = 1,843,200 / ( 16 x 1200 )
UART2400	EQU	48		; = 1,843,200 / ( 16 x 2400 )
UART4800	EQU	24		; = 1,843,200 / ( 16 x 4800 )
UART9600	EQU	12		; = 1,843,200 / ( 16 x 9600 )
UART19K2	EQU	06		; = 1,843,200 / ( 16 x 19,200 )
UART38K4	EQU	03		; = 1,843,200 / ( 16 x 38,400 )
UART57K6	EQU	02		; = 1,843,200 / ( 16 x 57,600 )
UART115K2	EQU	01		; = 1,843,200 / ( 16 x 115,200 )

U0DEFSPEED	EQU	UART19K2	; UART 0 default speed
U1DEFSPEED	EQU	UART9600	; UART 1 default speed
; --
; It can assign any of 256 4k pages (physical) from its
; 1Mb address space.
;
; To load phisycal page XXh to logical page (in CPU address space) Y,
; you should consider that MMU is at a fixed address 20h and that
; logical 4K page Y is derived in the MMU by the usage of A12,A13,A14
; and A15 address lines during an I/O instruction.
;
; So to address phys. ram page 00h at the top of logical space page Fh
; you need to have Fh * on top address lines * because this address
; is the index to MMU page.
;
; SoBCOMN	EQU	BBBASE + 0C00H	; resident portion address

SYSBASE EQU	BBBASE		; use this to have 60K TPA
; SYSBASE EQU	BBCOMN		; use this to have 63K TPA

;-------------------------------------

	org	$100

start:
	ld	de,512
	call	setdprm
	ld	bc,$00
	call	trkset
	ld	c,1			; drive B
	call	dsksel
	call	fdrvsel
	call	fhome
; 	ret	nz
	ld	bc,bldoffs		; read in loader
	call	dmaset
	ld	bc,$01
	call	secset
	call	fread

	nop
	nop
	nop

	jp	0

SETDPRM:
	LD	(CSPTR),HL
	LD	(CSLEN),DE
	RET

CSPTR:	DEFW	0
CSLEN:	DEFW	0

;
;=== get logged drive
	LD	C,A
	CALL	DSKSEL
	CALL	FDRVSEL
	CALL	FHOME
	LD	BC,BLDOFFS		; read in loader
	CALL	DMASET
	LD	BC,$01
	CALL	SECSET
	CALL	FREAD
	RET	NZ
	JP	BLDOFFS+2		; jump to the loader if all ok


;;


TRKSET:
	LD	(FTRKBUF),BC
	RET
SECSET:
	LD	(FSECBUF),BC
	RET
DMASET:
	LD	(FRDPBUF),BC
	RET
DSKSEL:
	LD	A,C
	LD	(FDRVBUF),A
	RET



;
;=======================================================================
;
; Modular Z80 DarkStar (NE Z80) Monitor
;
;====================================================== Z80CTC --
CTCBASE		EQU	0E8H
CTCCHAN0	EQU	CTCBASE+0	; Channel 1 - Free
CTCCHAN1	EQU	CTCBASE+1	; Channel 2 - System Timer
CTCCHAN2	EQU	CTCBASE+2	; Channel 3 - UART 1 Interrupt
CTCCHAN3	EQU	CTCBASE+3	; Channel 4 - UART 0 Interrupt
CTC0TCHI	EQU	32		; hi speed chan. 0 tc: 4Mhz / 256 / 32 = 488.28 Hz
CTC1TC100HZ	EQU	5		; lo speed chan. 1 tc: 488.28 Hz / 5 = ~ 97.6 Hz
CTC1TC50HZ	EQU	10		; lo speed chan. 1 tc: 488.28 Hz / 10 = ~ 48.8 Hz
CTC1TC25HZ	EQU	19		; lo speed chan. 1 tc: 488.28 Hz / 19 = ~ 25 Hz
CTC1TC10HZ	:
;
; 	LD	A,00h		<--- phis. page number	00xxxh (4k page)
; 	LD	B,F0h		<--- log. page number 	 Fxxxh (cpu page)
; 	LD	C,20h		<--- MMU I/O address
; 	OUT	(C),A
; 	RET
;
; The OUT instruction place:
; A on data lines D0-D7
; Fh (from B register) on A12-A15
; on port 20h (C register)
;
;
; Memory is organized as follow:
;
;	Slot 1	-> RAM	  -> 512k from 00000h to 7ffffh (mandatory)
;	Slot 2	-> RAM	  -> 128k from 80000h to 9ffffh (option 1)
;	Slot 2	-> RAM    -> 256k from 80000h to bffffh (option 2)
;	Slot 3	-> E====================================================================
;
; Modular Z80 DarkStar (NE Z80) Monitor
;
;=======================================================================
;
; CP/M 2 or 3 BIOS support utilities
; ---------------------------------------------------------------------


	;       character and disk i/o handlers for cp/m BIOS
	;	This are moved here from BIOS since we need to keep
	;	space...
;;
;; FDRVSEL - select drive for r/w ops
;
FDRVSEL:
	PUSH	AF			;
	PUSH	HL			;
	LD	HL,HDRVV	=================
;
; Floppy I/O
; ---------------------------------------------------------------------

;;
;; FDC delay
;
FDCDLY:
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	EX	(SP),HL
	RET

;;
;; waitfd - get 1771 status and copy on buffer
;
WAITFD:
	; wait until fdd busy is reset
	CALL	FDCDLY			; wait aproax 56 micros
	LD	B,5			; set soft timer
FWAIT00:
	LD	DE,0			; for ~ five seconds
FWAIT01:
	IN	A,(FDCCMDSTATR)		; input to fdd status
	BIT	0,A			; test busy bit
	JR	Z,FWAIT02		; jump if no command is in progreEQU	48		; lo speed chan. 1 tc: 488.28 Hz / 48 = ~ 10 Hz
CTC1TC2HZ	EQU	244		; lo speed chan. 1 tc: 488.28 Hz / 244 = ~ 2 Hz
SYSHERTZ	EQU	CTC1TC25HZ	; System timer hertz
; -- EEPROM --
EEP29EE		EQU	01H		; type 29EE020
EEP29XE		EQU	02H		; type 29LE020 or 29VE020
EEP29C		EQU	04H		; type 29C020
EEPUNSUPP	EQU	08H		; unsupported
EEPROGLOCK	EQU	10H		; programming locked
	;
EERINEPROM	EQU	80H		; tried to program eeprom running inside it

;
; MMU organization
;
; MMU manage 16 4kb pages in Z80 address space (logical)EPROM -> 256k from c0000h to fffffh (mandatory)
;


;-------------------------------------
; Production / Testing

BBDEBUG	EQU	FALSE


;-------------------------------------
; Segments, pages locations

IF	BBDEBUG

BBIMGP	EQU	04H		; Image location (DEBUG)
BBAPPP	EQU	0EH
BBPAG	EQU	0FH		; Base page location

ELSE

BBIMGP	EQU	EEPAGE0		; Image location
BBAPPP	EQU	0EH
BBPAG	EQU	0FH		; Base page location

ENDIF

TRNPAG	EQU	0DH		; Page used for transient MMU ops
BBBASE	EQU	BBPAG << 12	; non resident base address
B	; 10
	LD	A,(FDRVBUF)		; 13
	ADD	A,L			; 4
	LD	L,A			; 4
	LD	A,(HL)			; 7
	LD	H,A			;
	LD	A, (DSELBF)
	AND	$F0
	OR	H
	LD	(DSELBF),A		; 13
	OUT	(FDCDRVRCNT),A		; 11
	POP	HL			;
	POP	AF			;
	RET				;
	;
	; This used to translate the drive number in a cmd byte suitable
	; for drive selection on the floppy board
HDRVV:	DEFB	$01			; drive 1
	DEFB	$02			; drive 2
	DEFB	$04			; drive 3
	DEFB	$08 			; drive 4

;;
;; CPMBOOT - boostrap cp/m
;
CPMBOOT:
	LD	DE,512
	CALL	SETDPRM
	LD	BC,$00
	CALL	TRKSET
	LD	A,(CDISK)		;ss
	DEC	DE			;
	LD	A,D			; timer down
	OR	E			;
	JR	NZ,FWAIT01		;
	DEC	B			;
	JR	NZ,FWAIT00		; time out
FTIMEOUT:
	LD	A,FDCRESET		; reset fdd controller
	OUT	(FDCCMDSTATR),A		; exec. command
	XOR	A
	OUT	(FDCDRVRCNT),A
	INC	A			; set time-out bit error
	RET				; and ret
FWAIT02:
; 	XOR	A
	RET				; normal return
;
GCURTRK:
	LD	HL,FSEKBUF
	LD	A,(FDRVBUF)
	ADD	A,L
	LD	L,A
	RET
;;
;; FHOME - move head to trak 0 (cp/m home like)
;;
FHOME:
	PUSH	BC			; save register
	PUSH	DE
	LD	A,FDCRESTC		; fdd restore command
	LD	B,$0A			; 10 retries
FRWNXT:	DI				; not interruptible
	LD	HL,(FRDPBUF)
	LD	E,(IX+2)		; need to know buffer size on write
	LD	D,(IX+3)
	LD	A,(MIOBYTE)
	BIT	0,A
	JR	Z,FRWWRO
	LD	A,FDCREADC		; read command
	OUT	(FDCCMDSTATR),A		; exec. command
	CALL	FDCDLY
	JR	FRRDY
FRBSY:	RRCA
	JR	NC,FWEND
FRRDY:	IN	A,(FDCCMDSTATR)
	BIT	1,A			; sec found
	JR	Z,FRBSY
	IN	A,(FDCDATAREG)
	LD	(HL),A
	INC	HL
	JR	FRRDY
FRWWRO:	LD	A,FDCWRITC
	OUT	(FDCCMDSTATR),A		; exec. command
	CALL	FDCDLY
	JR	FWRDY
FRWBSY:	RRCA
	JR	NC,FWEND
F                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                OUT	(FDCCMDSTATR),A		; exec. command
	CALL	WAITFD			; wait until end command
	LD	C,A			; save status
	CALL	GCURTRK			; proceed
	IN	A,(FDCTRAKREG)
	LD	(HL),A
	LD	A,C			; restore status
	AND	00011001b		; set Z flag
	POP	DE
	POP	BC			; restore register
	RET

;;
;; FSEEK - seek to specific track/sector
;
FSEEK:
	PUSH	BC
	PUSH	DE
	LD	B,3			; retrys number
	CALL	GCURTRK
	LD	A,(HL)
	OUT	(FDCTRAKREG),A
FRETR1:	LD	A,(FSECBUF)
	OUT	(FDCSECTREG),A
	LD	A,(FTRKBUF)
	OUT	(FDCDATAREG),A
	LD	A,FDCSEEKC		; seek cmd
	OUT	(FDWRDY:	IN	A,(FDCCMDSTATR)
	BIT	1,A
	JR	Z,FRWBSY
	LD	A,(HL)
	OUT	(FDCDATAREG),A
	INC	HL
	DEC	DE		; 6 c.
	LD	A,D		; 4 c.
	OR	E		; 4 c.
	JR	NZ,FWRDY	; 7/12 c.
FWEND:	EI				; end of critical operations
	LD	C,B			; save retry count
	CALL	WAITFD
	LD	B,C			; restore retry count
	AND	01011100b		; mask wrt-prtc,rnf,crc,lst-dat error
	JR	Z,FSHTM
	DJNZ	FRWNXT
	LD	A,(TMPBYTE)
	BIT	6,A
	JR	NZ,FSHTM
	SET	6,A
	LD	(TMPBYTE),A
	CALL	FHOME
	JR	NZ,FSHTM
	JR	FRWLP
FSHTM:
	PUSH	AF
	XOR	A
	OUT	(FDCDRVRCNT),A
	POP	AF
	POP	DE
	RET
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                CCMDSTATR),A		; exec. command
	LD	C,B			; save retry count
	CALL	WAITFD
	LD	B,C			; restore retry count
	AND	00011001b
	JR	Z,FSKEND
	CALL	FHOME
	JR	NZ,FSKEND
	DJNZ	FRETR1
FSKEND:	IN	A,(FDCTRAKREG)
	LD	(HL),A
FTERR:	POP	DE
	POP	BC
	RET
;;
;; FREAD - read a sector
;
FREAD:
	LD	A,(MIOBYTE)
	SET	0,A
	JR	FLOPIO
;;
;; FWRITE - write a sector
;
FWRITE:
	LD	A,(MIOBYTE)
	RES	0,A
;;
;; FLOPIO - read or write a sector depending on MIOBYTE
;
FLOPIO:
	PUSH	DE
	LD	IX,CSPTR
	LD	(MIOBYTE),A
FRWLP:	CALL	FSEEK
	JR	NZ,FSHTM
	
;;
;; SIDSET - set current side bit on DSELBF
;;          selected side on C
;;
SIDSET:	LD	HL,DSELBF		; loads drive interf. buffer
	LD	A,C			; which side ?
	CP	0			;
	JR	NZ,SIDONE		; side 1
	RES	5,(HL)			; side 0
	RET				;
SIDONE:	SET	5,(HL)			;
	RET

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   